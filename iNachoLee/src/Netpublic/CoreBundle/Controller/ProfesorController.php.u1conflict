<?php

namespace Netpublic\CoreBundle\Controller;

use Symfony\Bundle\FrameworkBundle\Controller\Controller;
use Sensio\Bundle\FrameworkExtraBundle\Configuration\Method;
use Sensio\Bundle\FrameworkExtraBundle\Configuration\Route;
use Sensio\Bundle\FrameworkExtraBundle\Configuration\Template;
use Netpublic\CoreBundle\Entity\Profesor;
use Netpublic\CoreBundle\Form\ProfesorType;
use Netpublic\CoreBundle\Entity\Usuario;
use Symfony\Component\Security\Core\Encoder\MessageDigestPasswordEncoder;
use Imagine\Image\Box;
use Imagine\Image\Point;
use Imagine\Gd\Imagine;
use Doctrine\ORM\EntityRepository;
use Netpublic\CoreBundle\Util\Util;

/**
 * Profesor controller.
 *
 * @Route("/profesor")
 */
class ProfesorController extends Controller
{
    /**
     * Lists all Profesor entities.
     *
     * @Route("/", name="profesor")
     * @Template()
     */
    public function indexAction()
    {
        $em = $this->getDoctrine()->getEntityManager();
        $request=  $this->getRequest();
        $es_ajax=false;
        $delete_form=array();
        $entities = $em->getRepository('NetpublicCoreBundle:Profesor')->findAll();
        foreach ($entities as $e) {
            $delete_form[] = $this->createDeleteForm($e->getId())->createView();
        }
        if($request->isXmlHttpRequest()){
            $es_ajax=true;
        }
        return array(
            'entities' => $entities,
            'es_ajax' =>$es_ajax,
            'delete_form'=>$delete_form
            );
    }
     /**
     * Displays a form to edit an existing Alumno entity.
     *
     * @Route("/{cedula}/getprofesorcedula", name="profesor_getprofesorcedula")
     * @Template()
     */
    public function getalumnocedulaAction($cedula)
    {
        $em = $this->getDoctrine()->getEntityManager();

       $query = $em->createQuery('SELECT count(a) FROM NetpublicCoreBundle:Profesor a WHERE a.cedula=:cedula')
                            ->setParameters(array(
                            "cedula"=>$cedula                            
                            
                                )
                            );
            $count = $query->getSingleScalarResult();
       return new \Symfony\Component\HttpFoundation\Response($count);
    }    
        /**
     * Displays a form to edit an existing Alumno entity.
     *
     * @Route("/{id_periodo}/{id_profesor}/publicarnotas", name="profesor_publicarnotas")
     * 
     */
    public function publicarnotasAction($id_periodo,$id_profesor)
            
    {
        $em=  $this->getDoctrine()->getEntityManager();
        $desempenos__periodo_profesor=$em->createQuery("SELECT u FROM NetpublicCoreBundle:Desempeno u WHERE u.profesor=:profesor_id AND  u.periodo=:periodo_id")
                ->setParameters(array(
                    'periodo_id'=>$id_periodo,                   
		    'profesor_id'=>$id_profesor
                ))->getResult();   
        $ids=array();
        foreach ($desempenos__periodo_profesor as $d_s) {
            $ids[]=$d_s->getId();
        }
        $tem=$this->getDoctrine()->getRepository("NetpublicCoreBundle:Alumnodesempeno")
                ->ponderarNotasProfesor($id_periodo,
                        $id_profesor,
                        $ids) 
                ;
        $publicacion_periodo=  $this->getDoctrine()
                                  ->getRepository("NetpublicCoreBundle:PublicacionPeriodosProfesores")
                                  ->findOneBy(array(
                                      'profesor'=>$id_profesor,
                                      'periodo_academico'=>$id_periodo
                                  ));
        $nro_p=$publicacion_periodo->getTipo();
        return new \Symfony\Component\HttpFoundation\Response($nro_p);
        
    }
    /**
     * Displays a form to edit an existing Alumno entity.
     *
     * @Route("/{id_periodo}/{nro_item}/listaflujosprofe", name="profesor_listaflujosprofe")
     * @Template()
     */
    public function listaflujosprofeAction($id_periodo,$nro_item)
            
    {
   $em = $this->getDoctrine()->getEntityManager();                
   $porcentajes=array() ;      
   $estado_publicacion=array();
       $query = $em->createQuery('SELECT ppp,p FROM NetpublicCoreBundle:PublicacionPeriodosProfesores ppp JOIN ppp.profesor p where ppp.periodo_academico=:periodo_id')
               ;
       $query=$query->setParameter('periodo_id',$id_periodo);
        
       $entities = $query->getResult();
       
       foreach ($entities as $ppp) {        
            $estado_publicacion[]=$ppp->getTipo();        
            $carga_academica=  $this->getDoctrine()
                               ->getRepository("NetpublicCoreBundle:CargaAcademica")
                               ->findBy(array(
                                   "profesor"=>$ppp->getProfesor()->getId()
                               ));
      
      $nro_asg=0;
      $pctaje=0;
      foreach ($carga_academica as $ca) {
            $nro_horarios_aulas=$em->createQuery("SELECT count(a_d) FROM NetpublicCoreBundle:AlumnoDimension a_d  JOIN a_d.alumno a JOIN a_d.dimension d WHERE (a.grupo=:grupo_id and a_d.asignatura=:asignatura_id and d.tipo!=3) and (d.padre=:id_periodo or d=:id_periodo)")                
               
                              ->setParameters(array(
             //                            "id_periodo"=>$aula->getId(),
                                         "asignatura_id"=>$ca->getAsignatura()->getId(),
                                         "grupo_id" =>$ca->getGrupo()->getId(),
                                         "id_periodo" => $id_periodo))
                                  ->getSingleScalarResult();
             $nro_horarios_aulas1=$em->createQuery("SELECT count(a_d) FROM NetpublicCoreBundle:AlumnoDimension a_d  JOIN a_d.alumno a JOIN a_d.dimension d WHERE ((a.grupo=:grupo_id and a_d.asignatura=:asignatura_id and d.tipo!=3) and (d.padre=:id_periodo or d=:id_periodo)) and a_d.es_modificada=true")                
               
                                ->setParameters(array(             
                                         "asignatura_id"=>$ca->getAsignatura()->getId(),
                                         "grupo_id" =>$ca->getGrupo()->getId(),
                                         "id_periodo" => $id_periodo))
                                  ->getSingleScalarResult();
             if($nro_horarios_aulas>0)
             $pctaje=$pctaje+$nro_horarios_aulas1/$nro_horarios_aulas;
             else
                 $pctaje=0;
             $nro_asg++;                           
      }
      if($nro_asg>0)
        $ptajemayor=($pctaje/$nro_asg)*100;
      else
        $ptajemayor=0;  
      $porcentajes[]=array($ptajemayor);
    }
    


       return array(
           'entities'=>$entities,
           'porcentajes'=>$porcentajes,
           'estado_publicacion'=>$estado_publicacion,
           'id_periodo'=>$id_periodo

       );

    }
    /**
     * Displays a form to edit an existing Alumno entity.
     *
     * @Route("/listaflujos", name="profesor_listaflujos")
     * @Template()
     */
    public function listaflujosAction()
    {
            $ano_escolar_activo=  $this
                      ->getDoctrine()
                      ->getRepository("NetpublicCoreBundle:Dimension")
                      ->findAnoEscolarActivo();
    $periodo_escolar_activo=$this
                      ->getDoctrine()
                      ->getRepository("NetpublicCoreBundle:Dimension")
                      ->findPeriodoEscolarActivo();
    

    $ano_escolares=  $this
        ->getDoctrine()
                ->getRepository("NetpublicCoreBundle:Dimension")
                ->findBy(array(
                    'tipo'=>0));
    $periodos_escolares=  $this->
            getDoctrine()
            ->getRepository("NetpublicCoreBundle:Dimension")
            ->findPeriodosEscolar($ano_escolar_activo)
                            ;
          
          

               return array(
        
           'ano_escolares'=>$ano_escolares,
           'ano_escolar_activo'        =>$ano_escolar_activo,
           'periodo_escolar_activo'=>$periodo_escolar_activo,
           'periodo_escolares'=>$periodos_escolares        
       );
    }    

     /**
     * 
     *
     * @Route("/{profesor}/{periodo_academico}/seguimientonotas", name="profesor_seguimientonotas")
     * @Template()
     */
    public function seguimientonotasAction($profesor,$periodo_academico)  {
       $id_profesor=$profesor;
       $periodo_academico=$periodo_academico;
       $porcentajes=array();
       $em=  $this->getDoctrine()->getEntityManager();
       
  
       $carga_academica=  $this->getDoctrine()
                               ->getRepository("NetpublicCoreBundle:CargaAcademica")
                               ->findBy(array(
                                   "profesor"=>$id_profesor
                               ));
      foreach ($carga_academica as $ca) {
            $nro_horarios_aulas=$em->createQuery("SELECT count(a_d) FROM NetpublicCoreBundle:AlumnoDimension a_d  JOIN a_d.alumno a JOIN a_d.dimension d WHERE (a.grupo=:grupo_id and a_d.asignatura=:asignatura_id and d.tipo!=3) and (d.padre=:id_periodo or d=:id_periodo)")                
               
                              ->setParameters(array(
             //                            "id_periodo"=>$aula->getId(),
                                         "asignatura_id"=>$ca->getAsignatura()->getId(),
                                         "grupo_id" =>$ca->getGrupo()->getId(),
                                         "id_periodo" => $periodo_academico))
                                  ->getSingleScalarResult();
             $nro_horarios_aulas1=$em->createQuery("SELECT count(a_d) FROM NetpublicCoreBundle:AlumnoDimension a_d  JOIN a_d.alumno a JOIN a_d.dimension d WHERE ((a.grupo=:grupo_id and a_d.asignatura=:asignatura_id and d.tipo!=3) and (d.padre=:id_periodo or d=:id_periodo)) and a_d.es_modificada=true")                
               
                                ->setParameters(array(             
                                         "asignatura_id"=>$ca->getAsignatura()->getId(),
                                         "grupo_id" =>$ca->getGrupo()->getId(),
                                         "id_periodo" => $periodo_academico))
                                  ->getSingleScalarResult();
             $porcentajes[]=array($nro_horarios_aulas,$nro_horarios_aulas1);
       

                           
      }
       
      //print_r($porcentajes);
       return array(
           'carga_academica'=>$carga_academica,
           "porcentajes"=>$porcentajes,
       
           'id_profesor'=>$id_profesor

       );
    }    
    
   /**
     * Displays a form to create a new Alumno entity.
     *
     * @Route("/newexcell", name="profesor_newexcell")
     * @Template()
     */
    public function newexcellAction()
    {
        $sedes=  $this->getDoctrine()
                    ->getRepository("NetpublicCoreBundle:Colegio")
                    ->findAll();
       return array(
           "sedes"=>$sedes

       );
    }
       /**
     * Displays a form to create a new Alumno entity.
     *
     * @Route("/createexcell", name="profesor_createexcell")
     * @Template()
     */
    public function createexcellAction()
    {
   // obtenemos los datos del archivo
    ini_set('memory_limit', '-1');
    set_time_limit(0);
    $em=  $this->getDoctrine()->getEntityManager();
    $ano_escolar_activo=  $this->getDoctrine()
                               ->getRepository("NetpublicCoreBundle:Dimension")
                              ->findAnoEscolarActivo();
              
               $perios_escolares=$this->getDoctrine()
                               ->getRepository("NetpublicCoreBundle:Dimension")
                             ->findPeriodosEscolar($ano_escolar_activo);
    $request=  $this->getRequest();
    $posicion=array("A","B","C","D","E","F","G","H","I","J","L","M");
    $usuarios=array();        
    $sede_id=$request->get('sede');
    $sede=$this->getDoctrine()->getRepository("NetpublicCoreBundle:Colegio")
                                                    ->find($sede_id);
    $es_nombre_completo=$request->get('es_nombre_completo');    
    $columna_nombre=$request->get('columna_nombre');
    $fila_nombre=$request->get('fila_nombre');
    $columna_ti=$request->get("columna_ti");    
        // guardamos el archivo a la carpeta files       
    $prefijo = substr(md5(uniqid(rand())),0,6);                         
     $destino=__DIR__.'/../../../../../web/'.'uploads/temporal/strong'.$prefijo.'.xls';
     copy($_FILES['archivo_excell']['tmp_name'],$destino);   
     $inputFileName = $destino;
     $objReader = $this->get('xls.load_xls5')->load($inputFileName);
     $flag=true;
     $fila=$fila_nombre;  
     $hoja=0;
     if($es_nombre_completo==1){                    
                    while($flag){    
                        
                            $nombre_completo= $objReader->getSheet($hoja)->getCell('C'.$fila);   
                            $nombre_completo=  trim($nombre_completo);
                            $nombre_completo=  str_replace("  "," ", $nombre_completo);
                            $nombre_completo=  str_replace("   "," ", $nombre_completo);
                            $cedula= $objReader->getSheet($hoja)->getCell('E'.$fila)->getCalculatedValue();   
                            if($cedula=="")
                                $cedula='00';
                            if($nombre_completo==""){
                                $flag=false;
                            }
                            else{
                               
                                $array_nombre=  explode(" ",$nombre_completo);
                                
                                    
                                $profesor=new \Netpublic\CoreBundle\Entity\Profesor();
                                $profesor->setCedula($cedula);
                                $profesor->setTipo(2);                                
                                $profesor->setTipoDocumento(2);
                                if(count($array_nombre)==5){                            
                                    $primer_nombre=$array_nombre[2];
                                    $segundo_nombre=$array_nombre[3].$array_nombre[4];
                                    if($segundo_nombre=="NULL")
                                        $segundo_nombre=" ";
                                    $primer_apellido=$array_nombre[0];
                                    $sengundo_apellido=$array_nombre[1];                    
                                    $profesor->setApellido($primer_apellido);
                                    $profesor->setApellido1($sengundo_apellido);
                                    $profesor->setNombre($primer_nombre);
                                    $profesor->setNombre1($segundo_nombre);              
                                }
                                
                                if(count($array_nombre)==4){                            
                                    $primer_nombre=$array_nombre[2];
                                    $segundo_nombre=$array_nombre[3];
                                    if($segundo_nombre=="NULL")
                                        $segundo_nombre=" ";
                                    
                                    $primer_apellido=$array_nombre[0];
                                    $sengundo_apellido=$array_nombre[1];                    
                                    $profesor->setApellido($primer_apellido);
                                    $profesor->setApellido1($sengundo_apellido);
                                    $profesor->setNombre($primer_nombre);
                                    $profesor->setNombre1($segundo_nombre);              
                                }
                                if(count($array_nombre)==3){
                                    $primer_nombre=$array_nombre[2];                            
                                    $primer_apellido=$array_nombre[0];
                                    $sengundo_apellido=$array_nombre[1];
                                    $profesor->setApellido($primer_apellido);
                                    $profesor->setApellido1($sengundo_apellido);
                                    $profesor->setNombre($primer_nombre);   
                   

                                }
                                if(count($array_nombre)==3){
                                    $primer_nombre=$array_nombre[1];                            
                                    $primer_apellido=$array_nombre[0];                                    
                                    $profesor->setApellido($primer_apellido);                                    
                                    $profesor->setNombre($primer_nombre);   
                   

                                }
                                if(count($array_nombre)==1){
                                    $primer_nombre=$array_nombre[0];                                                                                                                                        
                                    $profesor->setNombre($primer_nombre);   
                   

                                }
                    
                              
                     $mi_rol=  $this->getDoctrine()->getRepository("NetpublicCoreBundle:Rol")->find(2);
                      $query = $em->createQuery('SELECT count(a) FROM NetpublicCoreBundle:Usuario a WHERE a.username LIKE :nombre')
                            ->setParameters(array(
                            "nombre"=>$profesor->getNombre().'%'                           
                            
                                )
                            );
            $count = $query->getSingleScalarResult();
			$nombre=$profesor->getNombre();
			if($count>0){
				$nombre=$profesor->getNombre().$count;
			}
			
            $usuario=new Usuario(); 
            //$primer_nombre=explode(" ",);
            $usuario->setUsername($nombre);
            $usuario->setSalt(md5(time()));
            $encoder = new MessageDigestPasswordEncoder('sha512', true, 10);
            $password = $encoder->encodePassword($profesor->getCedula(), $usuario->getSalt());
            $usuario->setPassword($password);
            $usuario->setEsAlumno(FALSE);
            $usuario->setProfesor($profesor);
            $usuario->addRol($mi_rol);       
            $profesor->setUsuario($usuario);  
            //Para realizar seguiemientos
                     foreach ($perios_escolares as $p_e) {    

                    $this->getDoctrine()->getRepository("NetpublicCoreBundle:Profesor")
                        ->generarFechasEntregasProfesor($profesor,$p_e);

                     } 

            $em->persist($profesor);
            $em->persist($usuario);
            $usuarios[]=$usuario;
              }
                    $fila++;
                }
             }
             if($es_nombre_completo==2){              
                 while($flag){
                      $nombre= $objReader->getSheet($hoja)->getCell($posicion[$columna_nombre].$fila);   
                      $nombre1= $objReader->getSheet($hoja)->getCell($posicion[$columna_nombre+1].$fila);   
                      $apellido= $objReader->getSheet($hoja)->getCell($posicion[$columna_nombre+2].$fila);   
                      $apellido1= $objReader->getSheet($hoja)->getCell($posicion[$columna_nombre+3].$fila);                         
                      $cedula= $objReader->getSheet($hoja)->getCell($posicion[$columna_ti].$fila);   
                      
                      if($nombre==""){
                          $flag=false;
                      }
                      else{
                          $profesor=new \Netpublic\CoreBundle\Entity\Profesor();
                          $profesor->setApellido($apellido);
                          $profesor->setApellido1($apellido1);
                          $profesor->setNombre($nombre);
                          if($nombre1=="NULL")
                              $nombre1=" ";
                          $profesor->setNombre1($nombre1);
                          $profesor->setCedula($cedula);
                          $profesor->setTipoDocumento(2);                     
                          $profesor->setSede($sede);                        
                          $profesor->setTipo(2);     
                                               $mi_rol=  $this->getDoctrine()->getRepository("NetpublicCoreBundle:Rol")->find(2);
                      $query = $em->createQuery('SELECT count(a) FROM NetpublicCoreBundle:Usuario a WHERE a.username LIKE :nombre')
                            ->setParameters(array(
                            "nombre"=>$profesor->getNombre().'%'                           
                            
                                )
                            );
            $count = $query->getSingleScalarResult();
			$nombre=$profesor->getNombre();
			if($count>0){
				$nombre=$profesor->getNombre().$count;
			}
			

                          $usuario=new Usuario(); 
                        //$primer_nombre=explode(" ",);
                          $usuario->setUsername($nombre);
                          $usuario->setSalt(md5(time()));
                          $encoder = new MessageDigestPasswordEncoder('sha512', true, 10);
                          $password = $encoder->encodePassword($profesor->getCedula(), $usuario->getSalt());
                          $usuario->setPassword($password);
                          $usuario->setEsAlumno(FALSE);
                          $usuario->setProfesor($profesor);
                          $usuario->addRol($mi_rol);       
                          $profesor->setUsuario($usuario);  
                          $em->persist($profesor);
                          //seguimeitnos
                     foreach ($perios_escolares as $p_e) {    
                          $this->getDoctrine()->getRepository("NetpublicCoreBundle:Profesor")
                                ->generarFechasEntregasProfesor($profesor,$p_e);
                     } 
                     $em->persist($usuario);                                                                               
                     $em->flush();
                     $usuarios[]=$usuario;                                                                                    
                      }
                     $fila++;
                 }
             }  
             
                $em->flush();
                
             return array(
                 'usuarios'=>$usuarios
             );   

    }

    
     /**
     * Lists all Profesor entities.
     *
     * @Route("/newnotasoffline", name="profesor_newnotasoffline")
     * @Template()
     */
    public function newnotasofflineAction()
    {
              
        $delete_form=array();
      
        return array(                      
            'delete_form'=>$delete_form
            );
    }
         /**
     * Lists all Profesor entities.
     *
     * @Route("/createnotasoffline", name="profesor_createnotasoffline")
     * @Template()
     */
    public function createnotasofflineAction()
    {
    // obtenemos los datos del archivo    
     
    set_time_limit(0);
    ini_set('memory_limit', '-1');           
    $em=  $this->getDoctrine()->getEntityManager();
    $colegio=  $this->getDoctrine()->getRepository("NetpublicCoreBundle:Colegio")
                    ->findOneBy(array(
                        "es_principal"=>1
                    ));
    $valoracion=$colegio->getTipoValoracion();
        $nota_minima=1;
        if($valoracion==1){            
            $nota_maxima=10;
        }
        else{
            $nota_maxima=5;
        }
       
    $cifras=$colegio->getNumeroCifrasignificativa();
    $archivo = $_FILES["notas_offline"]['name'];
    if ($archivo != "") {
        // guardamos el archivo a la carpeta files       
        $prefijo = substr(md5(uniqid(rand())),0,6);
        $destino=__DIR__.'/../../../../../web/'.'uploads/temporal/strong'.$prefijo.'.xls';
        if (copy($_FILES['notas_offline']['tmp_name'],$destino)) {
                $inputFileName = $destino;
                $objReader = $this->get('xls.load_xls5')->load($inputFileName);
                $carga_id_hoja_cero= $objReader->getActiveSheet()->getCell('A2')->getCalculatedValue();
                $ca=$em->getRepository("NetpublicCoreBundle:CargaAcademica")->find($carga_id_hoja_cero);
                $length= $objReader->getActiveSheet()->getCell('B2')->getCalculatedValue();
                $periodo_id= $objReader->getActiveSheet()->getCell('C2')->getCalculatedValue();
                $profesor_id=$ca->getProfesor()->getId();
                $carga_academica=$this
                      ->getDoctrine()
                      ->getRepository("NetpublicCoreBundle:CargaAcademica")
                      ->getAsignaturaGrupo($profesor_id);
                $hoja=0;
                $fila_inicio=11;                
                $off_set2=$length;
                $nro_errores=0;
                foreach ($carga_academica as $mi_carga) {
                    
                    $objReader->setActiveSheetIndex($hoja);
                    
                    $carga_id= $objReader->getActiveSheet()->getCell('A2')->getCalculatedValue();
                    $ca=$em->getRepository("NetpublicCoreBundle:CargaAcademica")->find($carga_id);
                    $length= $objReader->getActiveSheet()->getCell('B2')->getCalculatedValue();
                        echo "<h1>Otra hoja$hoja($length)($ca)</h1>";
                   
                    $alumnos=$alumnos=$em->getRepository("NetpublicCoreBundle:Alumno")->findBy(array(
                             "grupo"=>$ca->getGrupo()->getId()
                               ), array("apellido"=>'ASC'));
                       $fila_inicio=11;     
                       foreach ($alumnos as $alumno) {                           
                           $off_set1=2;
                           $off_set2=$length;
                           for ($index = 0; $index < ($length-2); $index++) {                               
                                $valor=$objReader->getActiveSheet()
                                 ->getCellByColumnAndRow($off_set1,$fila_inicio)
                                 ->getCalculatedValue(); 
                                $id=$objReader->getActiveSheet()
                                 ->getCellByColumnAndRow($off_set2,$fila_inicio)
                                 ->getCalculatedValue(); 
                                 $off_set1++;
                                 $off_set2++;
                                 $nota=$em->getRepository("NetpublicCoreBundle:AlumnoDimension")->find($id);
                                 //Vamos a establecer restrinciones
                                 if(($valor>$nota_maxima && $nota->getDimension()->getTipo()!=3) || ($valor<$nota_minima && $nota->getDimension()->getTipo()!=3)){
                                         $nota->setEsError(TRUE);
                                         $nro_errores++;
                                 }
                                else {
                                     $nota->setEsError(FALSE);
                                }
                                $valor=  number_format($valor,$cifras);
                                $nota->setNota($valor);

                                $em->persist($nota);
                                 
                           }
                           
                       $fila_inicio++;    
                       }
                    
                    $hoja++;
                }
                $em->flush();
                return $this->redirect($this->generateUrl('profesor_showcalificarexcel',array(
                    "cargaacademica_id"=>$carga_id_hoja_cero,
                    "periodo_id"=>$periodo_id,
                    "nro_errores"=>$nro_errores
                    )));
        } else {
            $status = "Error al subir el archivo";
        }
    } else {
        $status = "Error al subir archivo";
    }      
    return array(
           "usuarios"=>1
       );
        
    }
    /**
     * Displays a form to edit an existing Alumno entity.
     * @Route("/{cargaacademica_id}/{periodo_id}/{nro_errores}/showcalificarexcel", name="profesor_showcalificarexcel") 
     * @Template()
     * 
     */    
    public function showcalificarexcelAction($cargaacademica_id,$periodo_id,$nro_errores){
    set_time_limit(0);
    ini_set('memory_limit', '-1');           
    
        $em=  $this->getDoctrine()->getEntityManager();
        $carga_academica=$em->getRepository("NetpublicCoreBundle:CargaAcademica")->find($cargaacademica_id);          
        $periodo=$em->getRepository("NetpublicCoreBundle:Dimension")->find($periodo_id);
        $alumnos=$this->getDoctrine()->getRepository("NetpublicCoreBundle:Alumno")->findBy(
            array('grupo'=>$carga_academica->getGrupo()->getId()),
            array("apellido"=>'ASC')
        );  
        $entities=array();
        foreach ($alumnos as $alumno) {
            $items=array();
            $componentes=$this->getDoctrine()
                               ->getRepository("NetpublicCoreBundle:Grupo")
                               ->findNotaAlumnoAsignaturaProfesor(
                                       $alumno->getId(),
                                       $carga_academica->getProfesor()->getId(),
                                       $periodo, $carga_academica->getAsignatura()->getId());
                       for ($index = 0; $index < count($componentes); $index++) {                              
                             $items[]=$em->getRepository("NetpublicCoreBundle:Grupo")
                               ->findNotaAlumnoAsignaturaSinPadreProfesor(
                                       $alumno->getId(),
                                       $carga_academica->getProfesor()->getId(),
                                       $componentes[$index]->getDimension(),
                                       $carga_academica->getAsignatura()->getId());                                                   
                       }  
                       //Agregamos periodo y fallas.
                           $items[]=$em->getRepository("NetpublicCoreBundle:Grupo")
                              ->findNotaAlumnoAsignaturaPadreProfesor(
                                      $alumno->getId(),
                                      $carga_academica->getProfesor()->getId(),
                                       $periodo,
                                       $carga_academica->getAsignatura()->getId()
                                      );
                      $items_todos_alumnos[]=$items;     
            
        }
        $carga_academica_profesor=$this->getDoctrine()
                      ->getRepository("NetpublicCoreBundle:CargaAcademica")
                      ->getAsignaturaGrupo($carga_academica->getProfesor()->getId());

        return array(
            'items_todos_alumnos'=>$items_todos_alumnos,
            'alumnos'=>$alumnos,
            'nro_errores'=>$nro_errores,
            'carga_academica'=>$carga_academica_profesor,
            'periodo'=>$periodo,
            'carga_academica_actual'=>$cargaacademica_id
        );
                
    }
     /**
     * Displays a form to edit an existing Alumno entity.
     * @Route("/{carga_academica}/{periodo}/getnroerrores", name="profesor_getnroerrores") 
     * @Template()
     * 
     */    
    public function getnroerroresAction($carga_academica,$periodo){
        set_time_limit(0);
    ini_set('memory_limit', '-1');           
    
        $em=  $this->getDoctrine()->getEntityManager();
        $periodo_=$em->getRepository("NetpublicCoreBundle:Dimension")->find($periodo);
        $carga_academica_=$em->getRepository("NetpublicCoreBundle:CargaAcademica")->find($carga_academica);
        $nro=  $em->getRepository("NetpublicCoreBundle:Grupo")
                    ->findNroErrores($carga_academica_,$periodo_);
        $alumno=$em->getRepository("NetpublicCoreBundle:Alumno")->findOneBy(array(
            'grupo'=>$carga_academica_->getGrupo()->getId()
        ));
        $nro_=0;
        $componentes=$em->getRepository("NetpublicCoreBundle:Grupo")
                    ->findNotaAlumnoAsignaturaProfesor(
                            $alumno->getId(),
                            $carga_academica_->getProfesor()->getId(),
                            $periodo_,
                            $carga_academica_->getAsignatura()->getId());
                    foreach ($componentes as $c) {
                        $nro_comp=  $em->getRepository("NetpublicCoreBundle:Grupo")
                        ->findNroErrores($carga_academica_,$c->getDimension());
                       
                        $nro_=$nro_+$nro_comp;        
                    }
            $nro=$nro+$nro_; 
            $error="";
            if($nro>0){
                $error="<span style='font-size:8px;color:white;background-color:red;font-weight:900;'>$nro Detalles</span>";
            }
            return new \Symfony\Component\HttpFoundation\Response($error);
    }
     /**
     * Displays a form to edit an existing Alumno entity.
     * @Route("/{tipo}/getunaplanilla.{_format}",defaults={"_format"="xls"}, requirements={"_format"="html|xls|pdf"}, name="profesor_getunaplanilla") 
     * @Template()
     * 
     */    
    public function getunaplanillaAction($tipo){
        set_time_limit(0);
        ini_set('memory_limit', '-1');           
        
        $em=  $this->getDoctrine()->getEntityManager();
        $request=  $this->getRequest();
        $session=$this->get('request')->getSession();
	
        $carga_academica_id=1;//$request->get("carga_academica");
        $carga_academica=  $em->getRepository("NetpublicCoreBundle:CargaAcademica")->find($carga_academica_id);
        $profesor_id=$carga_academica->getProfesor()->getId();
        $asignatura_id=$carga_academica->getAsignatura()->getId();
        $periodo_id=$session->get('perido_id');
        $periodo=$this->getDoctrine()->getRepository("NetpublicCoreBundle:Dimension")->find($periodo_id);      

        $alumnos=$em->getRepository("NetpublicCoreBundle:Alumno")->findBy(array(
            "grupo"=>$carga_academica->getGrupo()->getId()
            ), array("apellido"=>'ASC')
         );
         $notas_alumnos=array();
         foreach ($alumnos as $alumno) {
             $notas_alumnos[]=$em->getRepository("NetpublicCoreBundle:Grupo")
                               ->findNotaAlumnoAsignaturaProfesor($alumno->getId(),$profesor_id,$periodo, $asignatura_id);
        
         }
         $xls_service =  $this->get('xls.service_xls5');
        // create the object see http://phpexcel.codeplex.com documentation
        $xls_service->getProperties()->setCreator("iNachoLee")
                             ->setLastModifiedBy("iNachoLee")
                             ->setTitle("Planilla Con Notas")
                             ->setSubject("Planillas Con Notas")
                             ->setDescription("Esta planilla sirve par calificar notas offlne.")
                             ->setKeywords("office 2007 openxml php")
                             ->setCategory("Test result file");
        $xls_service->setActiveSheetIndex(0);
        
        $nombre_dimensiones=$notas_alumnos[0];
        $fila_inicio=10;
        
        $xls_service->getActiveSheet
                          ->setCellValueByColumnAndRow(0, $fila_inicio,"#");
        $xls_service->getActiveSheet
                          ->setCellValueByColumnAndRow(1, $fila_inicio,"Nombre Completo");
        $xls_service->getActiveSheet()
                          ->getColumnDimension('A')->setWidth(5);
        $xls_service->getActiveSheet()
                          ->getColumnDimension('B')->setWidth(40);
        
        
        for ($index = 0; $index < count($nombre_dimensiones); $index++) {
            $xls_service->getActiveSheet
                          ->setCellValueByColumnAndRow($index+2, $fila_inicio,"{$nombre_dimensiones[$index]->getDimension()}");
        
        }
        for ($index1 = 0; $index1 < count($notas_alumnos); $index1++) {
            $xls_service->getActiveSheet
                          ->setCellValueByColumnAndRow(0, $index1+1+$fila_inicio,$index1+1);
            $xls_service->getActiveSheet()                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 
                          ->setCellValueByColumnAndRow(1, $index1+1+$fila_inicio,"{$alumnos[$index1]}");
        
            for ($index2 = 0; $index2 < count($notas_alumnos[$index1]); $index2++) {
                if($tipo==0){
                    $xls_service->getActiveSheet()                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 
                          ->setCellValueByColumnAndRow($index2+2, $index1+1+$fila_inicio,"     ");
                }
                else{
                    $xls_service->getActiveSheet()                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 
                          ->setCellValueByColumnAndRow($index2+2, $index1+1+$fila_inicio,"{$notas_alumnos[$index1][$index2]}");
                
                }
            }
        }
        $response = $xls_service->getResponse();
        $response->headers->set('Content-Type', 'text/vnd.ms-excel; charset=utf-8');
        $response->headers->set('Content-Disposition', "attachment;filename=yui.xls");        
        return $response;       
       
         return array(
             "alumnos"=>$alumnos,
             "notas_alumnos"=>$notas_alumnos
         );
        
    }
    

     /**
     * Displays a form to edit an existing Alumno entity.
     * @Route("/{tipo}/getplanillaconnotas.{_format}",defaults={"_format"="xls"}, requirements={"_format"="html|xls|pdf"}, name="profesor_getplanillaconnotas") 
     * @Template()
     * 
     */    
    public function getplanillaconnotasAction($tipo){
        set_time_limit(0);
        ini_set('memory_limit', '-1');           
        $em=  $this->getDoctrine()->getEntityManager();
        $session=$this->get('request')->getSession();
	$user = $this->get('security.context')->getToken()->getUser();
        $colegio=  $this->getDoctrine()->getRepository("NetpublicCoreBundle:Colegio")
                      ->findOneBy(array(
                          'es_principal'=>1                        
                      ));	
        if(($user->getEsAlumno()==FALSE)){
            $profesor=$user->getProfesor();
            $profesor_id=$profesor->getId();            
         }   
		
	
        $carga_academica=$this
                      ->getDoctrine()
                      ->getRepository("NetpublicCoreBundle:CargaAcademica")
                      ->getAsignaturaGrupo($profesor_id);
        $xls_service =  $this->get('xls.service_xls5');
        // create the object see http://phpexcel.codeplex.com documentation
        $xls_service->getProperties()->setCreator("iNachoLee")
                             ->setLastModifiedBy("iNachoLee")
                             ->setTitle("Planilla Con Notas")
                             ->setSubject("Planillas Con Notas")
                             ->setDescription("Esta planilla sirve par calificar notas offlne.")
                             ->setKeywords("office 2007 openxml php")
                             ->setCategory("Test result file");
        //Guardamos metadatos.
        $hoja=0;  
        $xls_service->setActiveSheetIndex($hoja);        
 
        $periodo_id=$session->get('perido_id');
        $periodo=$this->getDoctrine()->getRepository("NetpublicCoreBundle:Dimension")->find($periodo_id);      

        foreach ($carga_academica as $ca) {          
            $carga_academica=$ca;
            $profesor_id=$carga_academica->getProfesor()->getId();
            $asignatura_id=$carga_academica->getAsignatura()->getId();
            
            $alumnos=$em->getRepository("NetpublicCoreBundle:Alumno")->findBy(array(
                "grupo"=>$carga_academica->getGrupo()->getId()
                 ), array("apellido"=>'ASC')
             );
            $notas_alumnos=array();
            foreach ($alumnos as $alumno) {
                 $notas_alumnos[]=$em->getRepository("NetpublicCoreBundle:Grupo")
                               ->findNotaAlumnoAsignaturaProfesor($alumno->getId(),$profesor_id,$periodo, $asignatura_id);
        
            }
            $item_alumno_dim=$em->getRepository("NetpublicCoreBundle:Grupo")
                                ->findNotaAlumnoAsignaturaSinPadreProfesor(
                                       $notas_alumnos[0][0]->getAlumno()->getId(),
                                       $profesor_id,
                                       $periodo,
                                       $asignatura_id)
                    
             ;
             $off_set_periodo=  count($item_alumno_dim);
             $off_set_periodo_items=0;
             for ($index5 = 0; $index5 < count($item_alumno_dim); $index5++) {
                 $nro= $em->getRepository("NetpublicCoreBundle:Grupo")
                               ->findNroAlumnoAsignaturaSinPadreProfesor(
                                       $notas_alumnos[0][0]->getAlumno()->getId(),
                                       $profesor_id,
                                       $item_alumno_dim[$index5]->getDimension(),
                                       $asignatura_id);
                 $off_set_periodo_items=$off_set_periodo_items+$nro;
             }
                 $off_set_periodo_items_buffer=$off_set_periodo_items;
            
            $xls_service->setActiveSheetIndex($hoja);        
            $nombre_dimensiones=$notas_alumnos[0];
            $fila_inicio=10;        
            $xls_service->getActiveSheet
                          ->setCellValueByColumnAndRow(0, $fila_inicio,"#");
            $xls_service->getActiveSheet
                          ->setCellValueByColumnAndRow(1, $fila_inicio,"Nombre Completo");
            $xls_service->getActiveSheet()
                          ->getColumnDimension('A')->setWidth(5);
            $xls_service->getActiveSheet()
                          ->getColumnDimension('B')->setWidth(40);
                  Util::setBackgroundColor($xls_service, "FE0000",'B1');
            $xls_service->getActiveSheet
                          ->setCellValueByColumnAndRow(0,1,"id_cargaacademica");
            $xls_service->getActiveSheet
                          ->setCellValueByColumnAndRow(0,2,"{$ca->getId()}");
            $xls_service->getActiveSheet
                          ->setCellValueByColumnAndRow(1,1,"length_principal");
            
            
            $l=($off_set_periodo_items_buffer+2+$off_set_periodo+2);
            $xls_service->getActiveSheet($l
                          ->setCellValueByColumnAndRow(1,2,"$l");
            $xls_service->getActiveSheet
                          ->setCellValueByColumnAndRow(2,1,"id_periodo");
            $xls_service->getActiveSheet
                          ->setCellValueByColumnAndRow(2,2,"{$periodo_id}");
            
            $off_set_alumno_dim=0;
            for ($index = 0; $index < count($nombre_dimensiones); $index++) {
               // $xls_service->getActiveSheet
               //           ->setCellValueByColumnAndRow($index+2, $fila_inicio,"{$nombre_dimensiones[$index]->getDimension()}");
                            $item_alumno_dim=$em->getRepository("NetpublicCoreBundle:Grupo")
                               ->findNotaAlumnoAsignaturaSinPadreProfesor($nombre_dimensiones[$index]->getAlumno()->getId(),$profesor_id,$nombre_dimensiones[$index]->getDimension(),$asignatura_id);
                           
                             
                            for ($index4 = 0; $index4 < count($item_alumno_dim); $index4++) {
                                $xls_service->getActiveSheet
                                ->setCellValueByColumnAndRow($index4+2+$off_set_alumno_dim, $fila_inicio,"{$item_alumno_dim[$index4]->getDimension()}");
                                
                            }
                            $off_set_alumno_dim=$off_set_alumno_dim+count($item_alumno_dim);
                            $item_alumno_dim=$em->getRepository("NetpublicCoreBundle:Grupo")
                              ->findNotaAlumnoAsignaturaPadreProfesor($nombre_dimensiones[$index]->getAlumno()->getId(),$profesor_id,$periodo,$asignatura_id);
                  for ($index3 = 0; $index3 < count($item_alumno_dim); $index3++) {
                        //Ultima del ciclo
                       $xls_service->getActiveSheet
                              ->setCellValueByColumnAndRow($index3+2+$off_set_alumno_dim, $fila_inicio,"{$item_alumno_dim[$index3]->getDimension()}");
                  }
                
            }          
        
            for ($index1 = 0; $index1 < count($notas_alumnos); $index1++) {
                $xls_service->getActiveSheet()                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 
                          ->setCellValueByColumnAndRow(0, $index1+1+$fila_inicio,$index1+1);
                $xls_service->getActiveSheet
                          ->setCellValueByColumnAndRow(1, $index1+1+$fila_inicio,"{$alumnos[$index1]}");
                $off_set_alumno=0;          
                $off_set_periodo_items=$off_set_periodo_items_buffer;
                $mi_formula2="";
                $poderado_periodo=0;
                for ($index2 = 0; $index2 < count($notas_alumnos[$index1]); $index2++) {
                    if($tipo==0){
                        $xls_service->getActiveSheet
                          ->setCellValueByColumnAndRow($index2+2, $index1+1+$fila_inicio,"     ");
                    }
                     else{
                            $item_alumno=$em->getRepository("NetpublicCoreBundle:Grupo")
                               ->findNotaAlumnoAsignaturaSinPadreProfesor($notas_alumnos[$index1][$index2]->getAlumno()->getId(),$profesor_id,$notas_alumnos[$index1][$index2]->getDimension(),$notas_alumnos[$index1][$index2]->getAsignatura()->getId());
                            if($notas_alumnos[$index1][$index2]->getDimension()->getTipo()==1){
                                $ultimo_padre_periodo=TRUE;
                            }
                            else{
                                $ultimo_padre_periodo=FALSE;
                            }
                            $mi_formula="";
                            $promedios_porcetajes=0;
                            for ($index3 = 0; $index3 < count($item_alumno); $index3++) {
                                //Ultima del ciclo
                                if($ultimo_padre_periodo){
                                       // $xls_service->getActiveSheet
                                        //   ->setCellValueByColumnAndRow($index3+2+$off_set_alumno, $index1+1+$fila_inicio,$valor);
                                    $mi_formula2= $mi_formula2.Util::getColumnaLetra($index3+2+$off_set_alumno).($index1+1+$fila_inicio).'*'.$item_alumno[$index3]->getDimension()->getPonderado().'+';                                              
                                    $poderado_periodo=$poderado_periodo+$item_alumno[$index3]->getDimension()->getPonderado();
                                        
                                }
                                else{
                                    if(($index3+1)==  count($item_alumno)){
                                        $promedios_porcetajes=$promedios_porcetajes+$item_alumno[$index3]->getDimension()->getPonderado();
                                        $valor='=('.$mi_formula.Util::getColumnaLetra($index3+2+$off_set_alumno).($index1+1+$fila_inicio).'*'.$item_alumno[$index3]->getDimension()->getPonderado().')/'.$promedios_porcetajes;
                                        $xls_service->getActiveSheet
                                                     ->setCellValueByColumnAndRow(2+$off_set_periodo_items, $index1+1+$fila_inicio,$valor);
                                        $off_set_periodo_items++;   
                                        $valor=$item_alumno[$index3];
                                        
                                    }
                                    else{
                                        $valor=$item_alumno[$index3];
                                    }
                                    $promedios_porcetajes=$promedios_porcetajes+$item_alumno[$index3]->getDimension()->getPonderado();
                                         $mi_formula=$mi_formula.Util::getColumnaLetra($index3+2+$off_set_alumno).($index1+1+$fila_inicio).'*'.$item_alumno[$index3]->getDimension()->getPonderado().'+';   
                                         $xls_service->getActiveSheet
                                                     ->setCellValueByColumnAndRow($index3+2+$off_set_alumno, $index1+1+$fila_inicio,"$valor");
                                    
                                }
                                    
                                }
                            $off_set_alumno=$off_set_alumno+count($item_alumno);
                       // $xls_service->getActiveSheet
                       //   ->setCellValueByColumnAndRow($index2+2, $index1+1+$fila_inicio,"{$notas_alumnos[$index1][$index2]}");
                
                     }
                }
                //Agregamos nuestro periodo acadecemica
                //for ($index2 = 0; $index2 < 1; $index2++) {
              //echo $alumnos[$index1];
                $item_alumno=$em->getRepository("NetpublicCoreBundle:Grupo")
                              ->findNotaAlumnoAsignaturaPadreProfesor(
                                      $alumnos[$index1]->getId(),
                                      $profesor_id,
                                      $periodo,
                                      $asignatura_id
                                      );
                  for ($index3 = 0; $index3 < count($item_alumno); $index3++) {
                        //Ultima del ciclo
                      if($item_alumno[$index3]->getDimension()->getTipo()==1){
                          $valor3='=('.$mi_formula2.'0)/'.$poderado_periodo;
                      }
                      else{
                          $valor3=$item_alumno[$index3];
                      }    
                       $xls_service->getActiveSheet
                              ->setCellValueByColumnAndRow($index3+2+$off_set_alumno, $index1+1+$fila_inicio,"$valor3");
                  }
                  $off_set_alumno=$off_set_periodo_items_buffer+2+$off_set_periodo;
             //Vamos a ingrear los IDs
             for ($index2 = 0; $index2 < count($notas_alumnos[$index1]); $index2++) {
                    if($tipo==0){
                        $xls_service->getActiveSheet
                          ->setCellValueByColumnAndRow($index2+2, $index1+1+$fila_inicio,"     ");
                    }
                     else{
                            $item_alumno=$em->getRepository("NetpublicCoreBundle:Grupo")
                               ->findNotaAlumnoAsignaturaSinPadreProfesor($notas_alumnos[$index1][$index2]->getAlumno()->getId(),$profesor_id,$notas_alumnos[$index1][$index2]->getDimension(),$notas_alumnos[$index1][$index2]->getAsignatura()->getId());
                            if($notas_alumnos[$index1][$index2]->getDimension()->getTipo()==1){
                                $ultimo_padre_periodo=TRUE;
                            }
                            else{
                                $ultimo_padre_periodo=FALSE;
                            }
                            for ($index3 = 0; $index3 < count($item_alumno); $index3++) {
                                //Ultima del ciclo
                                if($ultimo_padre_periodo){
                                        $xls_service->getActiveSheet
                                          ->setCellValueByColumnAndRow($index3+2+$off_set_alumno, $index1+1+$fila_inicio,"{$item_alumno[$index3]->getId()}");
                                        
                                }
                                else{
                                    if(($index3+1)==  count($item_alumno)){
                                        $off_set_periodo_items++;   
                                        $valor=$item_alumno[$index3];
                                        
                                    }
                                    else{
                                        $valor=$item_alumno[$index3];
                                    }
                                    $xls_service->getActiveSheet
                                                     ->setCellValueByColumnAndRow($index3+2+$off_set_alumno, $index1+1+$fila_inicio,"{$valor->getId()}");
                                    
                                }
                                    
                                }
                            $off_set_alumno=$off_set_alumno+count($item_alumno);
         //Agregamos los componestes de periodos y fallas
                            
                            $item_alumno=$em->getRepository("NetpublicCoreBundle:Grupo")
                              ->findNotaAlumnoAsignaturaPadreProfesor(
                                      $alumnos[$index1]->getId(),
                                      $profesor_id,
                                      $periodo,
                                      $asignatura_id
                                      );
                  for ($index3 = 0; $index3 < count($item_alumno); $index3++) {
                       $xls_service->getActiveSheet
                              ->setCellValueByColumnAndRow($index3+2+$off_set_alumno, $index1+1+$fila_inicio,"{$item_alumno[$index3]->getId()}");
                  }
                  
                              }
                }     
                  
                  
                  
                  
                  
                  
                  
                  
            }
        
            $hoja++;   
         $xls_service->createSheet();
             //$xls_service->setActiveSheetIndex($hoja);
             $xls_service->getActiveSheet()->setTitle(substr("{$ca->getAsignatura()}-{$ca->getGrupo()})",0,28));
                
        
        }
        
        $xls_service->setActiveSheetIndex(0);        
            
        $nombre_archivo=  "planillaParaCalificarEnCasa_".Util::getSlug("$profesor","_").'_'.Util::getSlug("$periodo","_");

        $response = $xls_service->getResponse();
        $response->headers->set('Content-Type', 'text/vnd.ms-excel; charset=utf-8');
        $response->headers->set('Content-Disposition', "attachment;filename=$nombre_archivo.xls");        
        return $response;       
       
    }

    /**
     * Lists all Profesor entities.
     *
     * @Route("/indexdesempeno", name="profesor_indexdesempeno")
     * @Template()
     */
    public function indexdesempenoAction()
    {
        date_default_timezone_set("America/Bogota");       
        $session=$this->get('request')->getSession();
        $user = $this->get('security.context')->getToken()->getUser();    
        $periodo_id=$session->get('perido_id');
	$asignatura_id=$session->get('asignatura_id'); 
        if(!($user->getEsAlumno()))
            $profesor=$user->getProfesor();
        $em = $this->getDoctrine()->getEntityManager();
        $hoy=new \DateTime("now");
        $hoy=$hoy->format("Y-m-d H:i:s");
        $query="SELECT count(a) FROM NetpublicCoreBundle:Profesorperiodoentrega a ";
        $query.="WHERE  a.profesor=:profesor_id";
        $query.=" AND a.periodo=:periodo_id"; 
        $query.=" AND a.fecha_inicio<=:fecha_actual"; 
        $query.=" AND a.fecha_final>=:fecha_actual"; 
        $query = $em->createQuery($query)
                            ->setParameters(array(
                           "periodo_id"=>$periodo_id,
                           "fecha_actual"=>$hoy,
                            "profesor_id"=>$profesor->getId()    
                            ));
         $count = $query->getSingleScalarResult();
         
         $es_tiempo_calificar=$count;
        //Buscamos descriptores para el periodo y la asignatura en sesion
        $desempeno=$this->getDoctrine()
                       ->getRepository('NetpublicCoreBundle:Desempeno')
                       ->findBy(array('profesor'=>$profesor->getId(),'periodo'=>$session->get('perido_id')));
              
        return array('desempeno' => $desempeno,
            'es_tiempo_calificar'=>$es_tiempo_calificar);
    }    
    /**
     * Muestra la pagina de Descriptores,Actividades y Periodos
     *
     * @Route("/periodo_descriptores_actividades", name="profesor_periodo_descriptores_actividades")
     * @Template()
     */
    public function periodo_descriptores_actividadesAction()
    {
        $em = $this->getDoctrine()->getEntityManager();
        
        $entities = $em->getRepository('NetpublicCoreBundle:Profesor')->findAll();

        return array('entities' => $entities);
    } 
     /**
     * Muestra la pagina de Descriptores,Actividades y Periodos
     *
     * @Route("/grupocargaacademica", name="profesor_grupocargaacademica")
     * @Template()
     */
    public function grupocargaacademicaAction()
    {
         
    
     $user = $this->get('security.context')->getToken()->getUser();
        
        if(($user->getEsAlumno()==FALSE)){
            $profesor=$user->getProfesor();            
            $id_profesor=$profesor->getId();
            
            $entities=$this->getDoctrine()
                            ->getRepository('NetpublicCoreBundle:CargaAcademica')
                            ->findBy(array(
                                'profesor'=>$id_profesor
                            ));
           
        } 
        $entities__=array();
        $ids_grupo=array();
        foreach ($entities as $entity) {
            if (!in_array($entity->getGrupo()->getId(),$ids_grupo)){
                $ids_grupo[]=$entity->getGrupo()->getId();
                $entities__[]=$entity;
            }
            
        }
    //     $contratos=$profesor->getContrato();
        return array('entities' => $entities__);
    } 
     /**
     * Muestra la pagina de Descriptores,Actividades y Periodos
     *
     * @Route("/asignaturacargaacademica", name="profesor_asignaturacargaacademica")
     * @Template()
     */
    public function asignaturacargaacademicaAction()
    {
         
    
     $user = $this->get('security.context')->getToken()->getUser();       
        if(($user->getEsAlumno()==FALSE)){
            $profesor=$user->getProfesor();            
            $id_profesor=$profesor->getId();
            
            $entities=$this->getDoctrine()->getRepository('NetpublicCoreBundle:CargaAcademica')->getAsignaturaGrupo($id_profesor);
           
        } 
        $contratos=$profesor->getContrato();
        return array('entities' => $entities,'contratos'=>$contratos);
    }        
  
    /**
     * Lists all Profesor entities.
     *
     * @Route("/perfil", name="profesor_perfil")
     * @Template()
     */
    public function perfilAction()
    {
        //Variable de SESION
/*        $user = $this->get('security.context')->getToken()->getUser();
        if(!($user->getEsAlumno())){
            $profesor=$user->getProfesor();
            echo "Estas como".$profesor->getNombre();
            
            $profesor_id=$profesor->getId();
        }
        
        $session = $this->get('request')->getSession();
        $session->set("profesor_id",$profesor_id);
        $repository=  $this->getDoctrine()->getRepository("NetpublicCoreBundle:Dimension");
        $dim_grupo_padre=$repository->findBy(array('es_ano_escolar'=>1));
        $carga_academica=$this->getDoctrine()
                ->getRepository("NetpublicCoreBundle:CargaAcademica")
                ->findBy(array("profesor"=>$profesor_id));
        $grupo=$carga_academica[0]->getGrupo();
        $asignatura=$carga_academica[0]->getAsignatura();
        
        return array(
            "dimension_defecto"=>$dim_grupo_padre[0],
            "grupo_defecto"=>$grupo,
            "asignatura_defecto"=>$asignatura
            );*/
        return new \Symfony\Component\HttpFoundation\Response("OK");
    }

    /**
     * Finds and displays a Profesor entity.
     *
     * @Route("/{id}/show", name="profesor_show")
     * @Template()
     */
    public function showAction($id)
    {
        $em = $this->getDoctrine()->getEntityManager();

        $entity = $em->getRepository('NetpublicCoreBundle:Profesor')->find($id);

        if (!$entity) {
            throw $this->createNotFoundException('Unable to find Profesor entity.');
        }

        $deleteForm = $this->createDeleteForm($id);

        return array(
            'entity'      => $entity,
            'delete_form' => $deleteForm->createView(),        );
    }
    /**
     * Finds and displays a Profesor entity.
     *
     * @Route("/{id_profesor}/showhorario", name="profesor_showhorario")
     * @Template()
     */
    public function showhorarioAction($id_profesor)
    {
        $em = $this->getDoctrine()->getEntityManager();

         $carga_academica=  $this->getDoctrine()->getRepository("NetpublicCoreBundle:CargaAcademica")->findBy(array(
            'profesor'=>$id_profesor,
            //'es_carga_academica'=>TRUE
        ));
        
        return array(
            'carga_academica' => $carga_academica

            );
    }

    /**
     * Displays a form to create a new Profesor entity.
     *
     * @Route("/new", name="profesor_new")
     * @Template()
     */
    public function newAction()
    {
        $entity = new Profesor();
        $form   = $this->createForm(new ProfesorType(), $entity);
        $es_ajax=false;
        $request=  $this->getRequest();
        if($request->isXmlHttpRequest())
            $es_ajax=true;
        return array(
            'entity' => $entity,
            'form'   => $form->createView(),
           
        );
    }

    /**
     * Creates a new Profesor entity.
     *
     * @Route("/create", name="profesor_create")
     * @Method("post")
     * @Template("NetpublicCoreBundle:Profesor:new.html.twig")
     */
    public function createAction()
    {
        $entity  = new Profesor();
        $request = $this->getRequest();
        $es_ajax=false;
        if($request->isXmlHttpRequest()){
            $es_ajax=true;
        }
        $form    = $this->createForm(new ProfesorType(), $entity);
         $form->handleRequest($request);
        
        if ($form->isValid()) {            
            $em = $this->getDoctrine()->getEntityManager();
            $query = $em->createQuery('SELECT count(a) FROM NetpublicCoreBundle:Usuario a WHERE a.username LIKE :nombre')
                            ->setParameters(array(
                            "nombre"=>$entity->getNombre().'%'                           
                            
                                )
                            );
            $count = $query->getSingleScalarResult();
			$nombre=$entity->getNombre();
			if($count>0){
				$nombre=$entity->getNombre().$count;
			}
			
            $usuario=new Usuario(); 
            //$primer_nombre=explode(" ",);
            $usuario->setUsername($nombre);
            $usuario->setSalt(md5(time()));
            $encoder = new MessageDigestPasswordEncoder('sha512', true, 10);
            $password = $encoder->encodePassword($entity->getCedula(), $usuario->getSalt());
            $usuario->setPassword($password);
            $usuario->setEsAlumno(FALSE);
            $usuario->setProfesor($entity);
            $entity->setUsuario($usuario);            
            if($entity->getTipo()==1){
                //Rector
                $mi_rol=  $this->getDoctrine()->getRepository("NetpublicCoreBundle:Rol")->find(3);
            }
            if($entity->getTipo()==3){
                //Secretaria Auxiliar
                $mi_rol=  $this->getDoctrine()->getRepository("NetpublicCoreBundle:Rol")->find(4);
            }
            if($entity->getTipo()==2){                
                //Profesor
              
                     
                $mi_rol=  $this->getDoctrine()->getRepository("NetpublicCoreBundle:Rol")->find(2);
            }
            if($entity->getTipo()==4){
                //Coordinador Academico
                $mi_rol=  $this->getDoctrine()->getRepository("NetpublicCoreBundle:Rol")->find(3);
            }
            if($entity->getTipo()==5){
                //Coordinador De Convivencia
                $mi_rol=  $this->getDoctrine()->getRepository("NetpublicCoreBundle:Rol")->find(3);
            }
            $usuario->addRol($mi_rol);           
            $em->persist($usuario);             
            $em->persist($entity);             
            $em->flush();
            $file=$form['foto_academica']->getData();
            if($file){
                                $nombre_archivo= 'profesor'.$entity->getId();  
                                    //$file->move(__DIR__.'/../../../../web/'.'uploads/documents',$nombre_archivo);
                                    $imagine = new \Imagine\Gd\Imagine();
                                    $image = $imagine->open($file);
                                    $thumbnail_mini = $image->thumbnail(new Box(50, 50));
                                    $thumbnail_mini->save(__DIR__.'/../../../../../web/'.'uploads/documents/mini'.$nombre_archivo.'.jpg');
                                    $thumbnail_strong = $image->thumbnail(new Box(135, 300));
                                    $thumbnail_strong->save(__DIR__.'/../../../../../web/'.'uploads/documents/strong'.$nombre_archivo.'.jpg');
                                    $usuario->setEsFotoperfil(TRUE);
               
            }
            $file1=$form['foto_firma']->getData();
            if($file1){
            $nombre_archivo= 'firma_profe'.$entity->getId().'.'.$file1->guessExtension();  
            $file1->move(__DIR__.'/../../../../../web/'.'uploads/documents',$nombre_archivo);
            }
            $em->persist($mi_rol);            
            if($entity->getTipo()==2){
             
           $ano_escolar_activo=  $this->getDoctrine()
                               ->getRepository("NetpublicCoreBundle:Dimension")
                              ->findAnoEscolarActivo();
              
               $perios_escolares=$this->getDoctrine()
                               ->getRepository("NetpublicCoreBundle:Dimension")
                             ->findPeriodosEscolar($ano_escolar_activo);
                     foreach ($perios_escolares as $p_e) {    

                          $this->getDoctrine()->getRepository("NetpublicCoreBundle:Profesor")
                        ->generarFechasEntregasProfesor($entity,$p_e);

                     } 
            }     
            $em->flush();
            if ($this->container->get('request')->isXmlHttpRequest()){
                return new \Symfony\Component\HttpFoundation\Response("ok");
            }
            return $this->redirect($this->generateUrl('profesor_show', array('id' => $entity->getId())));
            
        }
        
        return array(
            'entity' => $entity,
            'form'   => $form->createView(),
            'es_ajax' =>$es_ajax
        );
    }

    /**
     * Displays a form to edit an existing Profesor entity.
     *
     * @Route("/{id}/edit", name="profesor_edit")
     * @Template()
     */
    public function editAction($id)
    {
        $em = $this->getDoctrine()->getEntityManager();
        $request=  $this->getRequest();
        $es_ajax=false;
        $entity = $em->getRepository('NetpublicCoreBundle:Profesor')->find($id);

        if (!$entity) {
            throw $this->createNotFoundException('Unable to find Profesor entity.');
        }
        if($request->isXmlHttpRequest()){
            $es_ajax=true;
        }

        //$editForm = $this->createForm(new ProfesorType(), $entity);
        $editForm = $this->createFormBuilder($entity)
            ->add('nombre',null,array('label'=>'Primer Nombre.'))
            ->add('nombre1',null,array('label'=>'Segundo Nombre.'))
            ->add('apellido',null,array('label'=>'Primer Apellido.'))                                                
            ->add('apellido1',null,array('label'=>'Segundo Apellido.'))                    
            
             ->add('tipo_documento','choice',array(
                 'empty_value' => '             ',
                'choices'=>array(                    
                    '1'=>'Cedula Ciudadania',
                    '2'=>'Tarjeta de Identidad',
                    '3'=>"Cédula de Extranjería ó Identificación de Extranjería",
                    '5'=>"Registro Civil de Nacimiento",
                    "6"=>"Número de Identificación Personal (NIP)",
                    '7'=>"Número Único de Identificación Personal (NUIP)",
                    '8'=>"Número de Identificación establecido por la Secretaría de  Educación",
                    "9"=>"Certificado Cabildo"
                )))

            ->add('cedula','text',  array(
                'attr'=>  array('onblur'=> 'getAlumnoCedulaProfesor();')
            )) 
           ->add('sede')   
      
            ->add('genero','choice',array(
                'required'=>FALSE,
                'empty_value' => '             ',
                'choices'=>array(
                    
                    '1'=>'Masculino',
                    '2'=>'Femenino'
                )))                
            ->add('clase')        
            ->add('fecha_nacimiento')        
             ->add('departamento', 'entity', array(
                 'required'=>FALSE,
                                  'empty_value' => '             ',
                     'class' => 'NetpublicCoreBundle:ValorVariable',
                     'multiple'=>FALSE,
                     'query_builder' => function(EntityRepository $er) {
                                                return $er->createQueryBuilder('u')
                                                      ->where('u.variable=13')  
                                                      ->orderBy('u.id', 'ASC');
                                        },
              ))       
             ->add('municipio', 'entity', array(
                 'required'=>FALSE,
                                  'empty_value' => '             ',
                     'class' => 'NetpublicCoreBundle:ValorVariable',
                     'multiple'=>FALSE,
                     'query_builder' => function(EntityRepository $er) {
                                                return $er->createQueryBuilder('u')
                                                      ->where('u.variable=14')  
                                                      ->orderBy('u.id', 'ASC');
                                        },
              ))           
            //->add('estado_civil')        
            ->add('estado_civil','choice',array(
                'required'=>FALSE,
                'empty_value' => '             ',
                'choices'=>array(                    
                    '1'=>'Soltero',
                    '2'=>'Casado',
                    '3'=>"Union Libre"
                )))                
            ->add('numero_hijos')                        
            ->add('fecha_retiro') 
            ->add('fecha_vinculacion') 
            ->add('libreta_militar')                 
            ->add('distrito')        
        

->add('nivel_educativo_aprobado','choice',array(
    'required'=>FALSE,
                'empty_value' => '             ',
                'choices'=>array(
                    '1'=>'Sin titulo',
                    '2'=>'Bachiller pedagógico',
                    '3'=>'Normalista superior',
                    '4'=>"Otro bachiller",
                    '5'=>"Técnico o tecnólogo en educación",
                    "6"=>"Técnico o tecnólogo en otras áreas",
                    '7'=>"Profesional o licenciado en educación",
                    '8'=>"Profesional en otras áreas, no licenciado",
                    "9"=>"Postgrado en educación",
                    "10"=>"Postgrado en otras áreas"
                )))   
->add('ubicacion','choice',array(
    'required'=>FALSE,
                'empty_value' => '             ',
                'choices'=>array(
                    '1'=>'1 Establecimiento educativo',
                    '2'=>'2 En Comisión',
                    '3'=>'3 Otros'

                )))    
->add('cargo','choice',array(
    'required'=>FALSE,
    'empty_value' => '             ',
                'choices'=>array(
                    '1'=>'1 Docente',
                    '2'=>'2 Directivo Docente'                  

                )))                  
->add('zona','choice',array(
    'required'=>FALSE,
                'empty_value' => '             ',
                'choices'=>array(
                    '1'=>'1 Zona urbana',
                    '2'=>'2 Zona rural',
                    '3'=>'3 No aplica'

                )))    
->add('fuente_recursos','choice',array(
    'required'=>FALSE,
                'empty_value' => '             ',
                'choices'=>array(
                    '1'=>'1 SGP',
                    '2'=>'2 Recursos propios (de la Entidad Territorial)'
   
                )))    
->add('tipo_vinculacion','choice',array(
    'required'=>FALSE,
                'empty_value' => '             ',
                'choices'=>array(
                    '1'=>'1 Con nombramiento en propiedad',
                    '2'=>'2 Con nombramiento provisional en una vacante definitiva',
                    '3'=>'3 Con nombramiento provisional en una vacante temporal',
                    '4'=>"4 Con nombramiento en período de prueba"
                   
                )))                 
->add('nombre_cargo','choice',array(
    'required'=>FALSE,
                'empty_value' => '             ',
                'choices'=>array(
                    '1'=>'1  Docente de aula',
                    '2'=>'2 Docente con funciones de apoyo para alumnos con necesidades educativas especiales',
                    '3'=>'3 Docente con funciones de orientador',
                    '4'=>"4  Coordinador",
                    '5'=>"5  Director rural",
                    "6"=>"6  Rector",
                    '7'=>"7  Director de núcleo",
                    '8'=>"8  Supervisor de educación"
                   
                )))   
->add('doc_dir_comision','choice',array(
    'required'=>FALSE,
                'empty_value' => '             ',
                'choices'=>array(
                    '1'=>'1 Para ocupar un cargo de libre nombramiento y remoción',
                    '2'=>'2 De estudios remunerada',
                    '3'=>'3 De estudios no remunerada',
                    '4'=>"4 De Servicios",
                    '4'=>"5 No Aplica"
                                     
                )))  
->add('fecha_status_amenazado')                                                                                                
->add('amenazados','choice',array(
    'required'=>FALSE,
                'empty_value' => '             ',
                'choices'=>array(
                    '0'=>'No',
                    '1'=>'Si'
                 
                )))   

            
            
#            ->add('fecha_status_amenazado')                        
            ->add('estado_civil')        
            ->add('numero_hijos')                                        
            ->add('fecha_retiro')        
            ->add('libreta_militar')                        
            ->add('distrito')        

->add('grado_escalafon','choice',array(
    'required'=>FALSE,
                'empty_value' => '             ',
                'choices'=>array(
                    '1'=>'SE Sin escalafón',
                    '2'=>'BC Bachiller',
                    '3'=>'PT Profesional técnico o tecnológico en educación',
                    '4'=>"PU Profesional universitario",
                    '5'=>"Técnico o tecnólogo en educación",
                    "6"=>"IA Instructor II-A",
                    '7'=>"IB Instructor III-B",
                    '8'=>"IC Instructor IV-C",
                    "9"=>"A",
                    "10"=>"B",
                    '11'=>'01',
                    '12'=>'02',
                    '13'=>'03',
                    '14'=>"04",
                    '15'=>"05",
                    "16"=>"06",
                    '17'=>"07",
                    '18'=>"08",
                    "19"=>"09",
                    "20"=>"10",
                    '21'=>'11',
                    '22'=>'12',
                    '23'=>'13',
                    '24'=>"14",
                    '25'=>"1A",
                    "26"=>"1B",
                    '27'=>"1C",
                    '28'=>"1D",
                    "29"=>"29",
                    '30'=>"2A",
                    "31"=>"2B",
                    '32'=>"2C",
                    '33'=>"2D",
                    "34"=>"3AM Maestria",                  
                    '35'=>"3BM Maestria",
                    "36"=>"3CM Maestria",
                    '37'=>"3DM Maestria",
                    '38'=>"3AD Doctorado",
                    "39"=>"3BD Doctorado",
                    '40'=>"3CD Doctorado",
                    "41"=>"3DD Doctorado",
                  
                    
                )))                 
->add('sobresueldo_recibido','choice',array(
    'required'=>FALSE,
                'empty_value' => '             ',
                'choices'=>array(
                    '1'=>'No Aplica / Sin Sobresueldo',
                    '2'=>'Sobresueldo 5%',
                    '3'=>'Sobresueldo 10%',
                    '4'=>"Sobresueldo 15%",
                    '5'=>"Sobresueldo 20%",
                    "6"=>"Sobresueldo 25%",
                    '7'=>"Sobresueldo 30%",
                    '8'=>"Sobresueldo 35%",
                    "9"=>"Sobresueldo 40%",
                    "10"=>"Sobresueldo 18%"                 
                    
                )))                 

->add('nivel_ensenanza','choice',array(
    'required'=>FALSE,
                'empty_value' => '0',
                'choices'=>array(
                    '1'=>'Preescolar',
                    '2'=>'Básica Primaria',
                    '3'=>'Básica Secundaria y Media',
                    '4'=>"Ciclo Complementario (Normales)",
                    '5'=>"No Aplica"                
                )))                 

->add('etnoeducador','choice',array(
    'required'=>FALSE,
                'empty_value' => '             ',
                'choices'=>array(
                    '1'=>'Raizal',
                    '2'=>'Afrocolombiano',
                    '3'=>'Indigena',
                    '4'=>"No Aplica"                     
                )))                 
->add('area_ensenanza_nombrado','choice',array(
    'required'=>FALSE,
                'empty_value' => '             ',
                'choices'=>array(
                    '1'=>'Preescolar',
                    '2'=>'Primaria',
                    '3'=>'Ciencias Naturales y Educación Ambiental',
                    '4'=>"Ciencias Sociales",
                    '5'=>"Educ. Artistica - Artes plásticas",
                    "6"=>"Educ. Artistica - Música",
                    '7'=>"Educ. Artistica - Artes Escenica",
                    '8'=>"Educ. Artistica - Danzas",
                    "9"=>"Educ. Física, Recreación y Deporte",
                    "10"=>"Educ. Etica y en Valores",
                    '11'=>'Educ. Religiosa',
                    '12'=>'Humanidades y Lengua Castellana',
                    '13'=>'Idioma Extranjero Francés',
                    '14'=>"Idioma Extranjero Inglés",
                    '15'=>"Matemáticas",
                    "16"=>"Tecnología e Informática",
                    '17'=>"Ciencias Naturales Química",
                    '18'=>"Ciencias Naturales Física",
                    "19"=>"Filosofía",
                    "20"=>"Ciencias Económicas y Políticas",
                    '21'=>'Areas de Apoyo Para educación Especial',
                    '22'=>'No aplica'
                )))                                       
 ->add('area_ensenanza_tecnica','choice',array(
     'required'=>FALSE,
                'empty_value' => '             ',
                'choices'=>array(
                    '1'=>'Finanzas - Administración y Seguros',
                    '2'=>'Ventas y Servicios',
                    '3'=>'Ciencias Naturales y Aplicadas',
                    '4'=>"Salud",
                    '5'=>"Ciencias Sociales, Educación, Servicios Gubernamentales y Religión",
                    "6"=>"Cultura, Arte, Esparcimiento y Deporte",
                    '7'=>"Explotación Primaria y Extractiva",
                    '8'=>"Operadores del Equipo y Transporte Instalación y Mantenimiento",
                    "9"=>"Procesamiento, Fabricación y Ensamble",
                    "10"=>"Otras",
                    '11'=>'No aplica'
                )))                                       
           
            
            ->add('descripcion_otra_area')        

             ->add('foto_academica','file',array('required'=>FALSE))    
            ->getForm();                                    
        

                ;
        //$deleteForm = $this->createDeleteForm($id);

        return array(
            'entity'      => $entity,
            'edit_form'   => $editForm->createView(),
          //  'delete_form' => $deleteForm->createView(),
            'es_ajax' => $es_ajax
        );
    }
   /**
     * Displays a form to edit an existing Profesor entity.
     *
     * @Route("/{id}/editperfiladminfiltro", name="profesor_editperfiladminfiltro")
     * @Template()
     */
    public function editperfiladminfiltroAction($id)
    {
        $em = $this->getDoctrine()->getEntityManager();
        $request=  $this->getRequest();
        $es_ajax=false;
        $entity = $em->getRepository('NetpublicCoreBundle:Profesor')->find($id);

        if (!$entity) {
            throw $this->createNotFoundException('Unable to find Profesor entity.');
        }
        if($request->isXmlHttpRequest()){
            $es_ajax=true;
        }

        $editForm = $this->createForm(new ProfesorType(), $entity);
        $deleteForm = $this->createDeleteForm($id);

        return array(
            'entity'      => $entity,
            'edit_form'   => $editForm->createView(),
            'delete_form' => $deleteForm->createView(),
            'es_ajax' => $es_ajax
        );
    }

    /**
     * Edits an existing Profesor entity.
     *
     * @Route("/{id}/update", name="profesor_update")
     * @Method("post")
     * @Template("NetpublicCoreBundle:Profesor:edit.html.twig")
     */
    public function updateAction($id)
    {
        $em = $this->getDoctrine()->getEntityManager();

        $entity = $em->getRepository('NetpublicCoreBundle:Profesor')->find($id);

        if (!$entity) {
            throw $this->createNotFoundException('Unable to find Profesor entity.');
        }
        //VAlidando informacion que no esta en el formulario
        //$tipo_usuario=$entity->getTipo();
        //$usuario=$entity->getUsuario();
             $editForm = $this->createFormBuilder($entity)
            ->add('nombre',null,array('label'=>'Primer Nombre.'))
            ->add('nombre1',null,array('label'=>'Segundo Nombre.'))
            ->add('apellido',null,array('label'=>'Primer Apellido.'))                                                
            ->add('apellido1',null,array('label'=>'Segundo Apellido.'))                    
             ->add('tipo_documento','choice',array(
                 'empty_value' => '             ',
                'choices'=>array(                    
                    '1'=>'Cedula Ciudadania',
                    '2'=>'Tarjeta de Identidad',
                    '3'=>"Cédula de Extranjería ó Identificación de Extranjería",
                    '5'=>"Registro Civil de Nacimiento",
                    "6"=>"Número de Identificación Personal (NIP)",
                    '7'=>"Número Único de Identificación Personal (NUIP)",
                    '8'=>"Número de Identificación establecido por la Secretaría de  Educación",
                    "9"=>"Certificado Cabildo"
                )))

            ->add('cedula','text',  array(
                'attr'=>  array('onblur'=> 'getAlumnoCedulaProfesor();')
            )) 
           ->add('sede')   
      
            ->add('genero','choice',array(
                'required'=>FALSE,
                'empty_value' => '             ',
                'choices'=>array(
                    
                    '1'=>'Masculino',
                    '2'=>'Femenino'
                )))                
            ->add('clase')        
            ->add('fecha_nacimiento')        
             ->add('departamento', 'entity', array(
                 'required'=>FALSE,
                                  'empty_value' => '             ',
                     'class' => 'NetpublicCoreBundle:ValorVariable',
                     'multiple'=>FALSE,
                     'query_builder' => function(EntityRepository $er) {
                                                return $er->createQueryBuilder('u')
                                                      ->where('u.variable=13')  
                                                      ->orderBy('u.id', 'ASC');
                                        },
              ))       
             ->add('municipio', 'entity', array(
                 'required'=>FALSE,
                                  'empty_value' => '             ',
                     'class' => 'NetpublicCoreBundle:ValorVariable',
                     'multiple'=>FALSE,
                     'query_builder' => function(EntityRepository $er) {
                                                return $er->createQueryBuilder('u')
                                                      ->where('u.variable=14')  
                                                      ->orderBy('u.id', 'ASC');
                                        },
              ))           
            //->add('estado_civil')        
            ->add('estado_civil','choice',array(
                'required'=>FALSE,
                'empty_value' => '             ',
                'choices'=>array(                    
                    '1'=>'Soltero',
                    '2'=>'Casado',
                    '3'=>"Union Libre"
                )))                
            ->add('numero_hijos')                        
            ->add('fecha_retiro') 
            ->add('fecha_vinculacion') 
            ->add('libreta_militar')                 
            ->add('distrito')        
        

->add('nivel_educativo_aprobado','choice',array(
    'required'=>FALSE,
                'empty_value' => '             ',
                'choices'=>array(
                    '1'=>'Sin titulo',
                    '2'=>'Bachiller pedagógico',
                    '3'=>'Normalista superior',
                    '4'=>"Otro bachiller",
                    '5'=>"Técnico o tecnólogo en educación",
                    "6"=>"Técnico o tecnólogo en otras áreas",
                    '7'=>"Profesional o licenciado en educación",
                    '8'=>"Profesional en otras áreas, no licenciado",
                    "9"=>"Postgrado en educación",
                    "10"=>"Postgrado en otras áreas"
                )))   
->add('ubicacion','choice',array(
    'required'=>FALSE,
                'empty_value' => '             ',
                'choices'=>array(
                    '1'=>'1 Establecimiento educativo',
                    '2'=>'2 En Comisión',
                    '3'=>'3 Otros'

                )))    
->add('cargo','choice',array(
    'required'=>FALSE,
    'empty_value' => '             ',
                'choices'=>array(
                    '1'=>'1 Docente',
                    '2'=>'2 Directivo Docente'                  

                )))                  
->add('zona','choice',array(
    'required'=>FALSE,
                'empty_value' => '             ',
                'choices'=>array(
                    '1'=>'1 Zona urbana',
                    '2'=>'2 Zona rural',
                    '3'=>'3 No aplica'

                )))    
->add('fuente_recursos','choice',array(
    'required'=>FALSE,
                'empty_value' => '             ',
                'choices'=>array(
                    '1'=>'1 SGP',
                    '2'=>'2 Recursos propios (de la Entidad Territorial)'
   
                )))    
->add('tipo_vinculacion','choice',array(
    'required'=>FALSE,
                'empty_value' => '             ',
                'choices'=>array(
                    '1'=>'1 Con nombramiento en propiedad',
                    '2'=>'2 Con nombramiento provisional en una vacante definitiva',
                    '3'=>'3 Con nombramiento provisional en una vacante temporal',
                    '4'=>"4 Con nombramiento en período de prueba"
                   
                )))                 
->add('nombre_cargo','choice',array(
    'required'=>FALSE,
                'empty_value' => '             ',
                'choices'=>array(
                    '1'=>'1  Docente de aula',
                    '2'=>'2 Docente con funciones de apoyo para alumnos con necesidades educativas especiales',
                    '3'=>'3 Docente con funciones de orientador',
                    '4'=>"4  Coordinador",
                    '5'=>"5  Director rural",
                    "6"=>"6  Rector",
                    '7'=>"7  Director de núcleo",
                    '8'=>"8  Supervisor de educación"
                   
                )))   
->add('doc_dir_comision','choice',array(
    'required'=>FALSE,
                'empty_value' => '             ',
                'choices'=>array(
                    '1'=>'1 Para ocupar un cargo de libre nombramiento y remoción',
                    '2'=>'2 De estudios remunerada',
                    '3'=>'3 De estudios no remunerada',
                    '4'=>"4 De Servicios",
                    '4'=>"5 No Aplica"
                                     
                )))   
->add('fecha_status_amenazado')                                                
->add('amenazados','choice',array(
    'required'=>FALSE,
                'empty_value' => '             ',
                'choices'=>array(
                    '0'=>'No',
                    '1'=>'Si'
                 
                )))   

            
            
#            ->add('fecha_status_amenazado')                        
            ->add('estado_civil')        
            ->add('numero_hijos')                                        
            ->add('fecha_retiro')        
            ->add('libreta_militar')                        
            ->add('distrito')        

->add('grado_escalafon','choice',array(
    'required'=>FALSE,
                'empty_value' => '             ',
                'choices'=>array(
                    '1'=>'SE Sin escalafón',
                    '2'=>'BC Bachiller',
                    '3'=>'PT Profesional técnico o tecnológico en educación',
                    '4'=>"PU Profesional universitario",
                    '5'=>"Técnico o tecnólogo en educación",
                    "6"=>"IA Instructor II-A",
                    '7'=>"IB Instructor III-B",
                    '8'=>"IC Instructor IV-C",
                    "9"=>"A",
                    "10"=>"B",
                    '11'=>'01',
                    '12'=>'02',
                    '13'=>'03',
                    '14'=>"04",
                    '15'=>"05",
                    "16"=>"06",
                    '17'=>"07",
                    '18'=>"08",
                    "19"=>"09",
                    "20"=>"10",
                    '21'=>'11',
                    '22'=>'12',
                    '23'=>'13',
                    '24'=>"14",
                    '25'=>"1A",
                    "26"=>"1B",
                    '27'=>"1C",
                    '28'=>"1D",
                    "29"=>"29",
                    '30'=>"2A",
                    "31"=>"2B",
                    '32'=>"2C",
                    '33'=>"2D",
                    "34"=>"3AM Maestria",                  
                    '35'=>"3BM Maestria",
                    "36"=>"3CM Maestria",
                    '37'=>"3DM Maestria",
                    '38'=>"3AD Doctorado",
                    "39"=>"3BD Doctorado",
                    '40'=>"3CD Doctorado",
                    "41"=>"3DD Doctorado",
                  
                    
                )))                 
->add('sobresueldo_recibido','choice',array(
    'required'=>FALSE,
                'empty_value' => '             ',
                'choices'=>array(
                    '1'=>'No Aplica / Sin Sobresueldo',
                    '2'=>'Sobresueldo 5%',
                    '3'=>'Sobresueldo 10%',
                    '4'=>"Sobresueldo 15%",
                    '5'=>"Sobresueldo 20%",
                    "6"=>"Sobresueldo 25%",
                    '7'=>"Sobresueldo 30%",
                    '8'=>"Sobresueldo 35%",
                    "9"=>"Sobresueldo 40%",
                    "10"=>"Sobresueldo 18%"                 
                    
                )))                 

->add('nivel_ensenanza','choice',array(
    'required'=>FALSE,
                'empty_value' => '0',
                'choices'=>array(
                    '1'=>'Preescolar',
                    '2'=>'Básica Primaria',
                    '3'=>'Básica Secundaria y Media',
                    '4'=>"Ciclo Complementario (Normales)",
                    '5'=>"No Aplica"                
                )))                 

->add('etnoeducador','choice',array(
    'required'=>FALSE,
                'empty_value' => '             ',
                'choices'=>array(
                    '1'=>'Raizal',
                    '2'=>'Afrocolombiano',
                    '3'=>'Indigena',
                    '4'=>"No Aplica"                     
                )))                 
->add('area_ensenanza_nombrado','choice',array(
    'required'=>FALSE,
                'empty_value' => '             ',
                'choices'=>array(
                    '1'=>'Preescolar',
                    '2'=>'Primaria',
                    '3'=>'Ciencias Naturales y Educación Ambiental',
                    '4'=>"Ciencias Sociales",
                    '5'=>"Educ. Artistica - Artes plásticas",
                    "6"=>"Educ. Artistica - Música",
                    '7'=>"Educ. Artistica - Artes Escenica",
                    '8'=>"Educ. Artistica - Danzas",
                    "9"=>"Educ. Física, Recreación y Deporte",
                    "10"=>"Educ. Etica y en Valores",
                    '11'=>'Educ. Religiosa',
                    '12'=>'Humanidades y Lengua Castellana',
                    '13'=>'Idioma Extranjero Francés',
                    '14'=>"Idioma Extranjero Inglés",
                    '15'=>"Matemáticas",
                    "16"=>"Tecnología e Informática",
                    '17'=>"Ciencias Naturales Química",
                    '18'=>"Ciencias Naturales Física",
                    "19"=>"Filosofía",
                    "20"=>"Ciencias Económicas y Políticas",
                    '21'=>'Areas de Apoyo Para educación Especial',
                    '22'=>'No aplica'
                )))                                       
 ->add('area_ensenanza_tecnica','choice',array(
     'required'=>FALSE,
                'empty_value' => '             ',
                'choices'=>array(
                    '1'=>'Finanzas - Administración y Seguros',
                    '2'=>'Ventas y Servicios',
                    '3'=>'Ciencias Naturales y Aplicadas',
                    '4'=>"Salud",
                    '5'=>"Ciencias Sociales, Educación, Servicios Gubernamentales y Religión",
                    "6"=>"Cultura, Arte, Esparcimiento y Deporte",
                    '7'=>"Explotación Primaria y Extractiva",
                    '8'=>"Operadores del Equipo y Transporte Instalación y Mantenimiento",
                    "9"=>"Procesamiento, Fabricación y Ensamble",
                    "10"=>"Otras",
                    '11'=>'No aplica'
                )))                                       
           
            
            ->add('descripcion_otra_area')        

             ->add('foto_academica','file',array('required'=>FALSE))    
                                                ->getForm()
        ;

        //$deleteForm = $this->createDeleteForm($id);

        $request = $this->getRequest();

        $editForm->handleRequest($request);

        if ($editForm->isValid()) {
          //  $entity->setTipo($tipo_usuario);
               
            
            $file=$editForm['foto_academica']->getData();
            if($file){
               
                     $nombre_archivo= 'profesor'.$id;  
                      //$file->move(__DIR__.'/../../../../web/'.'uploads/documents',$nombre_archivo);
                     $imagine = new \Imagine\Gd\Imagine();
                     $image = $imagine->open($file);
                     $thumbnail_mini = $image->thumbnail(new Box(50, 50));
                     $thumbnail_mini->save(__DIR__.'/../../../../../web/'.'uploads/documents/mini'.$nombre_archivo.'.jpg');
                     $thumbnail_strong = $image->thumbnail(new Box(135, 300));
                     $thumbnail_strong->save(__DIR__.'/../../../../../web/'.'uploads/documents/strong'.$nombre_archivo.'.jpg');
                     $usuario=$entity->getUsuario();
                     $usuario->setEsFotoperfil(TRUE);
                     $em->persist($usuario);
                                    
               
            }
            $em->persist($entity);
            $em->flush();
            return $this->redirect($this->generateUrl('profesor_edit', array('id' => $id)));
        }

        return array(
            'entity'      => $entity,
            'edit_form'   => $editForm->createView() 
        );
    }
    /**
     * Edits an existing Profesor entity.
     *
     * @Route("/{id}/updateperfiladminfiltro", name="profesor_updateperfiladminfiltro")
     * @Method("post")
     * @Template()
     */
    public function updateperfiladminfiltroAction($id)
    {
        $em = $this->getDoctrine()->getEntityManager();

        $entity = $em->getRepository('NetpublicCoreBundle:Profesor')->find($id);

        if (!$entity) {
            throw $this->createNotFoundException('Unable to find Profesor entity.');
        }

        $editForm   = $this->createForm(new ProfesorType(), $entity);
        $deleteForm = $this->createDeleteForm($id);

        $request = $this->getRequest();

        $editForm->handleRequest($request);

        if ($editForm->isValid()) {
           
            $file=$editForm['foto_academica']->getData();
            if($file){
                                $nombre_archivo= 'profesor'.$id;  
                                    //$file->move(__DIR__.'/../../../../web/'.'uploads/documents',$nombre_archivo);
                                    $imagine = new \Imagine\Gd\Imagine();
                                    $image = $imagine->open($file);
                                    $thumbnail_mini = $image->thumbnail(new Box(50, 50));
                                    $thumbnail_mini->save(__DIR__.'/../../../../../web/'.'uploads/documents/mini'.$nombre_archivo.'.jpg');
                                    $thumbnail_strong = $image->thumbnail(new Box(135, 300));
                                    $thumbnail_strong->save(__DIR__.'/../../../../../web/'.'uploads/documents/strong'.$nombre_archivo.'.jpg');
                                    $usuario=$entity->getUsuario();
                                    $usuario->setEsFotoperfil(TRUE);
                                    $em->persist($usuario);
                                    
               
            }
	 if($entity->getTipo()==1){
                //Rector
                $mi_rol=  $this->getDoctrine()->getRepository("NetpublicCoreBundle:Rol")->find(3);
            }
            if($entity->getTipo()==3){
                //Secretaria Auxiliar
                $mi_rol=  $this->getDoctrine()->getRepository("NetpublicCoreBundle:Rol")->find(4);
            }
            if($entity->getTipo()==2){
                //Profesor
                $mi_rol=  $this->getDoctrine()->getRepository("NetpublicCoreBundle:Rol")->find(2);
            }
			 if($entity->getTipo()==4){
                //Rector
                $mi_rol=  $this->getDoctrine()->getRepository("NetpublicCoreBundle:Rol")->find(3);
            }
			 if($entity->getTipo()==5){
                //Rector
                $mi_rol=  $this->getDoctrine()->getRepository("NetpublicCoreBundle:Rol")->find(3);
            }
			 if($entity->getTipo()==6){
                //Rector
                $mi_rol=  $this->getDoctrine()->getRepository("NetpublicCoreBundle:Rol")->find(3);
            }
	
            $usuario=$entity->getUsuario();
	    $roles_usuario=$usuario->getUserRol();	
	    $es_aplicable_rol=true;
	    foreach($roles_usuario as $rl){
		if($rl->getId()==$mi_rol->getId())
		    $es_aplicable_rol=false;
	    }	
            if($es_aplicable_rol)		
            	$usuario->addRol($mi_rol);
	    $em->persist($usuario);  	
             $em->persist($entity);
		
            
            $em->flush();
            return $this->redirect($this->generateUrl('profesor_editperfiladminfiltro', array('id' => $id)));
        }

        return array(
            'entity'      => $entity,
            'edit_form'   => $editForm->createView(),
            'delete_form' => $deleteForm->createView(),
        );
    }

    /**
     * Deletes a Profesor entity.
     *
     * @Route("/{id}/delete", name="profesor_delete")
     * @Method("post")
     */
    public function deleteAction($id)
    {
        $form = $this->createDeleteForm($id);
        $request = $this->getRequest();
        
         $form->handleRequest($request);

        if ($form->isValid()) {
            $em = $this->getDoctrine()->getEntityManager();
            $entity = $em->getRepository('NetpublicCoreBundle:Profesor')->find($id);
            $usuario= $em->getRepository('NetpublicCoreBundle:Usuario')->findBy(array(
                "profesor"=>$id,
                "es_alumno" =>0
            ));
            if (!$entity) {
                throw $this->createNotFoundException('Unable to find Profesor entity.');
            }
            $em->remove($usuario[0]);
            $em->remove($entity);
            $em->flush();
            if($request->isXmlHttpRequest()){
                return new \Symfony\Component\HttpFoundation\Response("ok");
            }
        }

        return $this->redirect($this->generateUrl('profesor'));
    }
    /**
     * Obtenemos la disponibilidad Del Profesor en una Materia
     *
     * @Route("/{id_asignatura}/{id_profesor}/cargaacademica", name="profesor_cargaacademica")
     * 
     */
    public function cargaacademicaAction($id_asignatura,$id_profesor)
    {
        $request=  $this->getRequest();
        /*$horas_disp_profe_asignatura=$this->getDoctrine()
                                              ->getRepository("NetpublicCoreBundle:Profesor")
                                              ->getHoraDisponilesContratadas($id_profesor,$id_asignatura);
         * 
         */
        //Hras acpadas
         $em = $this->getDoctrine()->getEntityManager();
        $query = $em->createQuery('SELECT count(a) FROM NetpublicCoreBundle:CargaAcademica a WHERE a.asignatura=:asignatura_id AND a.profesor=:profesor_id')
                            ->setParameters(array(
                            "asignatura_id"=>$id_asignatura,                            
                            "profesor_id"=>$id_profesor    
                                )
                            );
            $count = $query->getSingleScalarResult();
        //Cntrat de prfesr en la asgnatra
        $contrato=$this->getDoctrine()->getRepository("NetpublicCoreBundle:Contrato")->findOneBy(array(
                        'profesor_contrato'=>$id_profesor  ,
                        'asignatura'=>$id_asignatura
            ));
        $horas_disp_profe_asignatura=$contrato->getHorasBuffer()-($count+1);
        if($request->isXmlHttpRequest()){
            
            return new \Symfony\Component\HttpFoundation\Response($horas_disp_profe_asignatura);
        }                   
    }
        /**
     * Finds and displays a Alumno entity.
     *
     * @Route("/{id}/perfiladmin", name="profesor_perfiladmin")
     * @Template()
     */
    public function perfiladminAction($id)
    {
        $em = $this->getDoctrine()->getEntityManager();
        $request=  $this->getRequest();
        $es_ajax=false;
        if($request->isXmlHttpRequest()){
            $es_ajax=true;
        }
        $entity = $em->getRepository('NetpublicCoreBundle:Profesor')->find($id);

        if (!$entity) {
            throw $this->createNotFoundException('Unable to find Alumno entity.');
        }
        $user = $this->get('security.context')->getToken()->getUser();
        $grupos_dir = $em->getRepository('NetpublicCoreBundle:Grupo')->findBy(array(
		"director_grupo"=>$id
		));
        if(($user->getEsAlumno()==FALSE)){            
            $session=$this->get('request')->getSession();
            $session->set('id_profesor_profesor',$entity->getId());
            
        }
        $deleteForm = $this->createDeleteForm($id);
        
        $carga_academicas=$entity->getCargaAcademica();
//Tiempo de entrega de peridos
        
        return array(
            'entity'      => $entity,
            'delete_form' => $deleteForm->createView(),
	    'grupos_dir' => $grupos_dir, 	
            'es_ajax' =>$es_ajax,            
            'carga_academicas'=>$carga_academicas,
            'id_profesor'=>$id
            
            );
    }


    private function generarPlanillaExcel($pc,$xls_service,$hoja,$profesor,$periodo,$asignatura_id,$grupo_id,$alumnos) {
        
    }
    private function createDeleteForm($id)
    {
        return $this->createFormBuilder(array('id' => $id))
            ->add('id', 'hidden')
            ->getForm()
        ;
    }
}
