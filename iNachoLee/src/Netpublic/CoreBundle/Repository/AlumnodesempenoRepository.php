<?php

namespace Netpublic\CoreBundle\Repository;
use Netpublic\CoreBundle\Entity\AlumnoDesempeno;
use Doctrine\ORM\EntityRepository;

/**
 * AlumnodesempenoRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class AlumnodesempenoRepository extends EntityRepository
{
    public function ponderarNotasProfesor($periodo_id,$id_profesor,$desempenos_ids=array()){
        $em=  $this->getEntityManager();
        //$session=$this->get('request')->getSession();
        $colegio=$em->getRepository("NetpublicCoreBundle:Colegio")->findOneBy(array(
            'es_principal'=>1
        ));
        $valor_minimo_deficiente=$colegio->getValorMinimoDeficiente();
        $valor_maximo_deficiente=$colegio->getValorMaximoDeficiente();
        $valor_minimo_insuficiente=$colegio->getValorMinimoInsuficiente();
        $valor_maximo_insuficiente=$colegio->getValorMaximoInsuficiente();
        $valor_minimo_aceptable=$colegio->getValorMinimoAceptable();
        $valor_maximo_aceptable=$colegio->getValorMaximoAceptable();
        $valor_minimo_sobresaliente=$colegio->getValorMinimoSobresaliente();
        $valor_maximo_sobresaliente=$colegio->getValorMaximoSobresaliente();
    
        $periodo=$em->getRepository("NetpublicCoreBundle:Dimension")->find($periodo_id);
        //Temporal, se borran unicamente los de la metreia
        $desempenos__periodo_profesor=$em->createQuery("SELECT u FROM NetpublicCoreBundle:Desempeno u WHERE u.profesor=:profesor_id AND  u.periodo=:periodo_id")
                ->setParameters(array(
                    'periodo_id'=>$periodo_id,                   
		    'profesor_id'=>$id_profesor
                ))->getResult();   
        $seg=  $em
                ->getRepository("NetpublicCoreBundle:PublicacionPeriodosProfesores")
                ->findOneBy(array(
                    'profesor'=>$id_profesor,
                    'periodo_academico'=>$periodo_id
                        ));
        if($seg){
            $seg->setTipo($seg->getTipo()+1);
            $em->persist($seg);
        }
        for ($index = 0; $index < count($desempenos_ids); $index++) {
             $desempenos[]= $em->getRepository("NetpublicCoreBundle:Desempeno")->find($desempenos_ids[$index]);
        }
        if(count($desempenos_ids)>0){
            if($desempenos_ids[0]==0){
		$desempenos=array();	
            }
        }
        else{
            $desempenos=array();	
        }    
        foreach ($desempenos__periodo_profesor as $d) {
            $em->createQuery("DELETE NetpublicCoreBundle:AlumnoDesempeno u WHERE u.desempeno=:desempeno_id")
                ->setParameters(array(
                    'desempeno_id'=>$d->getId()                    
                ))->execute(); 
        }
        $nota___="asdasdssyuri";                                                                        
        foreach ($desempenos as $desempeno)          {
            
            $grupos_aplica_desempeno=$desempeno->getGrupo();
                foreach ($grupos_aplica_desempeno as $g_a_d) {                
                        $alumnos= $em->getRepository("NetpublicCoreBundle:Alumno")->findBy(array(
                            'grupo'=>$g_a_d->getId()
                            ));    
                    //echo "---------------Otro grupo $g_a_d----------------------------";
                 
                     $indexDesempeno=-1;
                     $asignatura=$desempeno->getAsignatura()->getAsignatura();
                    foreach ($alumnos as $alumno) {
                        //$notas=$alumno->getNota();
                        $actividad_desempeno=$em->getRepository("NetpublicCoreBundle:AlumnoDesempeno")
                                            ->getDimensionGrupo($desempeno->getId(),$g_a_d->getId());
                        
                        $promedio=0;
                        $acum_porcentaje=0;

                        foreach ($actividad_desempeno as $a_d) {
                            $nota_dim=$em->getRepository("NetpublicCoreBundle:Alumno")
                                         ->getNotasComponenteAlumno(
                                                 $alumno->getId(),
                                                 $a_d->getActividad()->getId(),
                                                 $asignatura->getId()                                                 
                                                 );
                           echo "Nota({$a_d->getActividad()}):".$nota_dim;
                                    //echo "$alumno--nota:$nota {$nota->getDimension()}";
                                    $porcentaje=$a_d->getPorcentaje();
                                    $v_nota="$nota_dim"+0;
                                    $promedio=$promedio+($v_nota*$porcentaje);
                                    $acum_porcentaje+=$porcentaje;
                            
                        }
			if($acum_porcentaje>0)
                        $promedio=$promedio/$acum_porcentaje;
                        $alumn_des=new AlumnoDesempeno();
                        $alumn_des->setAlumno($alumno);
                        $alumn_des->setAsignatura($desempeno->getAsignatura()->getAsignatura());
                        $alumn_des->setDesempeno($desempeno);                        
                        $alumn_des->setDimension($periodo);
                        if($promedio>=$valor_minimo_deficiente && $promedio<$valor_maximo_deficiente){
                            $indexDesempeno=1;
                        }
                        if($promedio>=$valor_minimo_insuficiente && $promedio<$valor_maximo_insuficiente){
                            $indexDesempeno=2;
                        }
                        if($promedio>=$valor_minimo_aceptable && $promedio<$valor_maximo_aceptable){
                            $indexDesempeno=3;
                        }
                        if($promedio>=$valor_minimo_sobresaliente && $promedio<=$valor_maximo_sobresaliente){
                            $indexDesempeno=4;
                        } 
                        $alumn_des->setIndexDesempeno($indexDesempeno);
                        $em->persist($alumn_des);
                        //echo "Alumno{$alumn_des->getAlumno()}Promedio:$promedio Acumulado:$acum_porcentaje-{$alumn_des->getIndexDesempeno()}";
                        $nota___.="-$indexDesempeno";
                       
                    }
                    
            }        
    }
    //Se Publican todas las notas.
      $publicacion_periodo=  $em->getRepository("NetpublicCoreBundle:PublicacionPeriodosProfesores")
                                  ->findOneBy(array(
                                      'profesor'=>$id_profesor,
                                      'periodo_academico'=>$periodo_id
                                  ));
     $publicacion_periodo->setFechaUltimoPublicacion(new \DateTime); 
     $publicacion_periodo->setTipo(1);
     $em->persist($publicacion_periodo);
    $grupos_carga_academica= $em->getRepository("NetpublicCoreBundle:CargaAcademica")->findBy(array(
                    'profesor'=>$id_profesor,
                   /// 'asignatura'=>$asignatura_id,
                   'es_carga_academica'=>1
                   //'id'=>134
                            )); 
    foreach ($grupos_carga_academica as $g_a_a) {
         $alumnos= $em->getRepository("NetpublicCoreBundle:Alumno")->findBy(array(
                    'grupo'=>$g_a_a->getGrupo()->getId()
                            )); 
         
         //$asignatura_=$em->getRepository("NetpublicCoreBundle:Asignatura")->find($g_a_a->getAsignatura()->getId());
         $area=$g_a_a->getAsignatura()->getArea();
         $asignaturas= $em->getRepository("NetpublicCoreBundle:Asignatura")->findBy(array(
                                    'area'=>$area->getId()
                            ));                   
         $primer=0;
        foreach ($alumnos as $alumno) {
                        //CAlculas notas para las Areas
                       
                        $promedio_area=0;
                        $contador_asignaturas_area=0;
                        foreach ($asignaturas as $asignatura) {
                            $contador_asignaturas_area++;
                            $query="SELECT a_d FROM NetpublicCoreBundle:AlumnoDimension a_d JOIN a_d.dimension d JOIN a_d.asignatura a";
                            $query.=" WHERE (a_d.dimension=:periodo_id";
                            $query.=" AND a.id=:asignatura_id";
                            $query.=" AND a_d.alumno=:alumno_id";
                            $query.=" AND d.tipo=1)";                            
                            
                            $entities=$em->createQuery($query)                
                                                ->setParameters(array(
                                                        "periodo_id"=>$periodo_id,
                                                        "asignatura_id"=>$asignatura->getId(),
                                                        "alumno_id"=>$alumno->getId()                                                        
                                                    ))->getResult(); 

                            
                            
                            foreach ($entities as $entity) {
//                                echo $entity;
                                $promedio_area+=$entity->getNota();
                             }
                            //echo "<br/>";
                            
                       }
                       if($primer==0)                       
                       $primer++;
			$query="SELECT count(a_d) FROM NetpublicCoreBundle:AlumnoDimension a_d JOIN a_d.dimension d JOIN a_d.asignatura a";
                            $query.=" WHERE (";
                            $query.=" d.padre=:periodo_id";
                            $query.=" AND a.id=:asignatura_id";
                            $query.=" AND a_d.alumno=:alumno_id";
                            $query.=" AND d.tipo=2)";                            
                            
                            $count=$em->createQuery($query)                
                                                ->setParameters(array(
                                                        "periodo_id"=>$periodo_id,
                                                        "asignatura_id"=>$area->getId(),
                                                        "alumno_id"=>$alumno->getId()                                                        
                                                    ))->getSingleScalarResult(); 

			 if($count>0){

                       $query="SELECT a_d FROM NetpublicCoreBundle:AlumnoDimension a_d JOIN a_d.dimension d JOIN a_d.asignatura a";
                            $query.=" WHERE (";
                            $query.=" d.padre=:periodo_id";
                            $query.=" AND a.id=:asignatura_id";
                            $query.=" AND a_d.alumno=:alumno_id";
                            $query.=" AND d.tipo=2)";                            
                            
                            $entities_=$em->createQuery($query)                
                                                ->setParameters(array(
                                                        "periodo_id"=>$periodo_id,
                                                        "asignatura_id"=>$area->getId(),
                                                        "alumno_id"=>$alumno->getId()                                                        
                                                    ))->getResult(); 
                             //echo $entities_[0]."P: $area: ".$promedio_area.$contador_asignaturas_area;
                                    
                            $entities_[0]->setNota(number_format($promedio_area/$contador_asignaturas_area,1));                            
                            $em->persist($entities_[0]);
			$nota___.="-Ingresado-";
				}
                               // echo "<br/>";
        }
    }
        $em->flush();
//        return new \Symfony\Component\HttpFoundation\Response($nota___);
        
    }
   public function ponderarNotasSinDespemnos($periodo_id,$grupos_carga_academica){
        $em=  $this->getEntityManager();
        $periodo=$em->getRepository("NetpublicCoreBundle:Dimension")->find($periodo_id);      

         foreach ($grupos_carga_academica as $g_a_a) {
         $alumnos= $em->getRepository("NetpublicCoreBundle:Alumno")->findBy(array(
                    'grupo'=>$g_a_a->getGrupo()->getId()
                            )); 
         
         //$asignatura_=$em->getRepository("NetpublicCoreBundle:Asignatura")->find($g_a_a->getAsignatura()->getId());
         $area=$g_a_a->getAsignatura()->getArea();
         $asignaturas= $em->getRepository("NetpublicCoreBundle:Asignatura")->findBy(array(
                                    'area'=>$area->getId()
                            ));  
         $profesor_id=$g_a_a->getProfesor()->getId();
         $asignatura_id=$g_a_a->getAsignatura()->getId();
             //Se Publican todas las notas.
        $publicacion_periodo=  $em->getRepository("NetpublicCoreBundle:PublicacionPeriodosProfesores")
                                  ->findOneBy(array(
                                      'profesor'=>$profesor_id,
                                      'periodo_academico'=>$periodo_id
                                  ));
     $fecha=$publicacion_periodo->getFechaUltimoPublicacion(); 
         $primer=0;
        foreach ($alumnos as $alumno) {
                        //Actualizamos Fechas
                        $entities=  $em
                               ->getRepository("NetpublicCoreBundle:Grupo")
                               ->findNotaAlumnoAsignaturaProfesor($alumno->getId(),$profesor_id,$periodo, $asignatura_id);
                       foreach ($entities as $entity) {
                           $entity->setFechaUltimoCambio($fecha);
                           $em->persist($entity);
                       }
                        //CAlculas notas para las Areas
                       
                        $promedio_area=0;
                        $contador_asignaturas_area=0;
                        foreach ($asignaturas as $asignatura) {
                            $contador_asignaturas_area++;
                            $query="SELECT a_d FROM NetpublicCoreBundle:AlumnoDimension a_d JOIN a_d.dimension d JOIN a_d.asignatura a";
                            $query.=" WHERE (a_d.dimension=:periodo_id";
                            $query.=" AND a.id=:asignatura_id";
                            $query.=" AND a_d.alumno=:alumno_id";
                            $query.=" AND d.tipo=1)";                            
                            
                            $entities=$em->createQuery($query)                
                                                ->setParameters(array(
                                                        "periodo_id"=>$periodo_id,
                                                        "asignatura_id"=>$asignatura->getId(),
                                                        "alumno_id"=>$alumno->getId()                                                        
                                                    ))->getResult(); 

                            
                            
                            foreach ($entities as $entity) {
//                                echo $entity;
                                $promedio_area+=$entity->getNota();
                             }
                            //echo "<br/>";
                            
                       }
                       if($primer==0)                       
                       $primer++;
			$query="SELECT count(a_d) FROM NetpublicCoreBundle:AlumnoDimension a_d JOIN a_d.dimension d JOIN a_d.asignatura a";
                            $query.=" WHERE (";
                            $query.=" d.padre=:periodo_id";
                            $query.=" AND a.id=:asignatura_id";
                            $query.=" AND a_d.alumno=:alumno_id";
                            $query.=" AND d.tipo=2)";                            
                            
                            $count=$em->createQuery($query)                
                                                ->setParameters(array(
                                                        "periodo_id"=>$periodo_id,
                                                        "asignatura_id"=>$area->getId(),
                                                        "alumno_id"=>$alumno->getId()                                                        
                                                    ))->getSingleScalarResult(); 

			 if($count>0){

                       $query="SELECT a_d FROM NetpublicCoreBundle:AlumnoDimension a_d JOIN a_d.dimension d JOIN a_d.asignatura a";
                            $query.=" WHERE (";
                            $query.=" d.padre=:periodo_id";
                            $query.=" AND a.id=:asignatura_id";
                            $query.=" AND a_d.alumno=:alumno_id";
                            $query.=" AND d.tipo=2)";                            
                            
                            $entities_=$em->createQuery($query)                
                                                ->setParameters(array(
                                                        "periodo_id"=>$periodo_id,
                                                        "asignatura_id"=>$area->getId(),
                                                        "alumno_id"=>$alumno->getId()                                                        
                                                    ))->getResult(); 
                             //echo $entities_[0]."P: $area: ".$promedio_area.$contador_asignaturas_area;
                                    
                            $entities_[0]->setNota(number_format($promedio_area/$contador_asignaturas_area,1));                            
                            $em->persist($entities_[0]);
			//$nota___.="-Ingresado-";
				}
                               // echo "<br/>";
        }
    }
        $em->flush();
//        return new \Symfony\Component\HttpFoundation\Response($nota___);
        
    }
    public function getDimensionGrupo($desempeno_id) {
    $sql="SELECT a,d FROM NetpublicCoreBundle:ActividadDesempeno a ";
    $sql.="JOIN a.actividad d ";    
    //$sql.="JOIN d.grupo g ";
    $sql.="WHERE ";
    $sql.="a.desempeno=:desempeno_id ";
    $sql.="AND  a.porcentaje > 0 ";
    //$sql.="and d.profesor=:profesor and d.asignatura=:asignatura ";
    //$sql.="AND g.id=:grupo_id ";
        $entities=$this->getEntityManager()
                ->createQuery($sql)                
                ->setParameters(array(
                    'desempeno_id'=>$desempeno_id,
                    //'grupo_id'=>$grupo_id
                    ))
                ->getResult(); 
        return $entities;
        
    }
    public function getAlumnoDesempeno($alumno,$asignatura,$desempeno) {
    $sql="SELECT a FROM NetpublicCoreBundle:AlumnoDesempeno a ";
    //$sql.="JOIN a.actividad d ";    
    //$sql.="JOIN d.grupo g ";
    $sql.="WHERE ";
    $sql.="a.desempeno=:desempeno_id ";
    $sql.="AND  a.asignatura=:asignatura_id ";
    $sql.="AND a.alumno=:alumno_id ";
    //$sql.="AND g.id=:grupo_id ";
        $entities=$this->getEntityManager()
                ->createQuery($sql)                
                ->setParameters(array(
                    'desempeno_id'=>$desempeno,
                    'alumno_id'=>$alumno,
                    'asignatura_id'=>$asignatura
                    ))
                ->getOneOrNullResult(); 
        return $entities;
    }

}