<?php

namespace Netpublic\CoreBundle\Repository;

use Doctrine\ORM\EntityRepository;
use Netpublic\CoreBundle\Util\Util;

/**
 * ColegioRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class ColegioRepository extends EntityRepository
{
    private $libro;
    public function findSedePrincipal(){
        $sede_principal=  $this->getEntityManager()
                               ->getRepository("NetpublicCoreBundle:Colegio")
                               ->findOneBy(array(
                                   'es_principal'=>true
                               ));
        return $sede_principal;
    }
    
    public function getNroAlumnosDesempeno($perido_id,$area_id,$valo_minimo,$valor_maximo,$sede='*',$grado='*',$grupo='*'){
        $em=  $this->getEntityManager();
        $query="SELECT count(a_d) FROM NetpublicCoreBundle:AlumnoDimension a_d JOIN a_d.dimension d JOIN a_d.alumno a";
        $query.=" WHERE (";
        $query.=" d.padre=:periodo_id";
        $query.=" AND a_d.asignatura=:asignatura_id";
        $query.=" AND a_d.nota>:valor_minimo";
        if($sede!='*'){
            $query.=" AND a.sede=:sede";
        }            
        if($grupo!='*'){
            $query.=" AND a.grupo=:grupo";
        }            
        if($grado!='*'){
            $query.=" AND a.grado=:grado";
        }            

        $query.=" AND a_d.nota<=:valor_maximo";
        $query.=" AND d.tipo=2)";                            
        $entities_=$em->createQuery($query)                
                      ->setParameters(array(
                       "periodo_id"=>$perido_id,
                       "asignatura_id"=>$area_id,
                       "valor_maximo"=>$valor_maximo,
                       "valor_minimo"=>$valo_minimo   
                                                    ));
        if($sede!='*'){
              $entities_->setParameter("sede", $sede);
        }            
        if($grupo!='*'){
              $entities_->setParameter("grupo", $grupo);
        }            
        if($grado!='*'){
              $entities_->setParameter("grado", $grado);
        }            

        $entities_=$entities_->getSingleScalarResult();
        return $entities_+0;
        
    }
    public function getNroAlumnosDesempenoAsg($asg_id,$grado_id,$valo_minimo,$valor_maximo,$periodo_id,$sede_id){
        $em=  $this->getEntityManager();
        $query="SELECT count(a_d) FROM NetpublicCoreBundle:AlumnoDimension a_d JOIN a_d.dimension d JOIN a_d.asignatura a JOIN a_d.alumno al ";
        $query.=" WHERE (";
        $query.=" d.padre=:periodo_id";
        $query.=" AND a_d.nota>:valor_minimo";
        $query.=" AND a_d.nota<=:valor_maximo";
        $query.=" AND a.grado=:grado_id";
        $query.=" AND a_d.asignatura=:asg_id";
        $query.=" AND al.sede=:sede_id";
        
        $query.=" AND d.tipo=2)";                           
        $entities_=$em->createQuery($query)                
                      ->setParameters(array(
                       "grado_id"=>$grado_id,  
                       "periodo_id"=>$periodo_id,
                       "asg_id"=>$asg_id,
                       "sede_id"=>$sede_id,   
                       "valor_maximo"=>$valor_maximo,
                       "valor_minimo"=>$valo_minimo));   
        
        $entities_=$entities_->getSingleScalarResult();
        return $entities_+0;
     }
    public function getNroAsgPerdidasGrado($grado_id,$nota_minima,$periodo_id,$sede_id){
        $em=  $this->getEntityManager();
        $query="SELECT a_d FROM NetpublicCoreBundle:AlumnoDimension a_d JOIN a_d.dimension d JOIN a_d.asignatura a JOIN a_d.alumno al ";
        $query.=" WHERE (";
        $query.=" d.id=:periodo_id";
        $query.=" AND a_d.nota<=:nota_minima";
        $query.=" AND a.grado=:grado_id";
        $query.=" AND al.sede=:sede_id";
        
        $query.=" AND d.tipo=1)";                           
        $entities_=$em->createQuery($query)                
                      ->setParameters(array(
                       "grado_id"=>$grado_id,  
                       "periodo_id"=>$periodo_id,
                       "sede_id"=>$sede_id,   
                       "nota_minima"=>$nota_minima,
                       ));   
        
        $entities_=$entities_->getResult();
        return $entities_;
     }
     
    public function finAreaNombreGrado($grado_id,$nombre_asg) {
        $em=  $this->getEntityManager();
        $query="SELECT asg FROM NetpublicCoreBundle:Asignatura asg";
        $query.=" WHERE (";
        $query.=" asg.es_area=true";
        $query.=" AND asg.grado=:grado_id";
        $query.=" AND (asg.nombre LIKE :nombre_asg)";
        $query.=" )";                            
        $entities_=$em->createQuery($query)                
                      ->setParameters(array(
                       "grado_id"=>$grado_id,   
                       "nombre_asg"=>"$nombre_asg",
                       ));   
       return $entities_->getOneOrNullResult();
        
    }
    public function findAlumnosAreasDesmpeno($nota_minima,$nota_maxima,$grado_id,$asignatura_id,$periodo_id) {
        $em=  $this->getEntityManager();
        $query="SELECT a_d,a FROM NetpublicCoreBundle:AlumnoDimension a_d JOIN a_d.dimension d JOIN a_d.asignatura asg JOIN a_d.alumno a";
        $query.=" WHERE (";
        $query.=" d.padre=:periodo_id";
        $query.=" AND a_d.nota>:valor_minimo";
        $query.=" AND a_d.nota<=:valor_maximo";
        $query.=" AND asg.grado=:grado_id";
        $query.=" AND a_d.asignatura=:asignatura_id";
        $query.=" AND d.tipo=2)";                            
        $entities_=$em->createQuery($query)                
                      ->setParameters(array(
                       "grado_id"=>$grado_id,  
                       "periodo_id"=>$periodo_id,
                       "asignatura_id"=>$asignatura_id,
                       "valor_maximo"=>$nota_maxima,
                       "valor_minimo"=>$nota_minima));   
        
        $entities_=$entities_->getResult(); 
        return $entities_;
    }
    public function getNroAlumnosPerdidosSede($sede_id,$nota_minima,$periodo_id) {
        $em=  $this->getEntityManager();
        $query="SELECT a_d,a FROM NetpublicCoreBundle:AlumnoDimension a_d JOIN a_d.alumno a JOIN a_d.dimension d";
        $query.=" WHERE (";
        $query.=" d.id=:periodo_id";
        $query.=" AND a_d.nota<=:valor_minimo";
        $query.=" AND a.sede=:sede_id";
        $query.=" AND d.tipo=1 )";
        $entities_=$em->createQuery($query)                
                      ->setParameters(array(
                       "valor_minimo"=>$nota_minima,  
                       "sede_id"=>$sede_id,
                       "periodo_id"=>$periodo_id,
                       ));
        /*$mi=$entities_->getResult();
        foreach ($mi as $m) {
            echo $m->getAlumno()."-".$m->getDimension()."-".$m.$m->getAsignatura()."<br/>";
        }*/
        //$nro=$entities_->getSingleScalarResult(); 
        return 3;
        
    }
 /*++++++++++++++++++++++++++++++++++++Funciones para exportar en excell*/
    
 //Inicializa el libro
 public function iniciarLibroExcell($libro,$colegio,$titulo) {
     $xls_service=$libro;
     $xls_service->getProperties()->setCreator("iNachoLee")
                             ->setLastModifiedBy("iNachoLee")
                             ->setTitle("Planilla Con Notas")
                             ->setSubject("Planillas Con Notas")
                             ->setDescription("Esta planilla sirve par calificar notas offlne.")
                             ->setKeywords("office 2007 openxml php")
                             ->setCategory("Test result file");
     $xls_service->getActiveSheet()      
                 ->getStyle("D3")->getFont()->setSize(20);
     $xls_service->getActiveSheet()      
                 ->getStyle("E4:E6")->getFont()->setSize(10);
            
     $xls_service->getActiveSheet
                          ->setCellValueByColumnAndRow(3,3,"$colegio");
     $xls_service->getActiveSheet()
            ->getRowDimension(3)->setRowHeight(30);
     $xls_service->getActiveSheet
                          ->setCellValueByColumnAndRow(4,4,"Aprobada Medianta resolución. ".$colegio->getNumeroLincFunc());
     $xls_service->getActiveSheet
                          ->setCellValueByColumnAndRow(4,5,"NIT: ".$colegio->getFax()." DANE: ".$colegio->getCodigoDane());
     $xls_service->getActiveSheet()                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 
                          ->setCellValueByColumnAndRow(4,6,"$titulo");
                  $this->libro=$libro;
     return $xls_service;       
        
 } 
    //Entrega el libro en excell
    public function exportarLibro($writer,$response,$nombre_archivo){
        
        // create the response
        $response->headers->set('Content-Type', 'text/vnd.ms-excel; charset=utf-8');
        $response->headers->set('Content-Disposition', "attachment;filename=$nombre_archivo.xls");
        return $response;
    
    }
 //Pinta el encabezado de la tabla en excell
    public function pintarEncabezado($columna,$fila,$emcabezado) {
        foreach ($emcabezado as $valor) {
            $this->pintarExcell($columna,$fila,$valor);
            $columna++;
        }
    }
 //Pinta las notas de los periodos
    public function pintarFilaNotasPeriodosAlumnoExcell($alumno,$periodo,$profesor_id,$asignatura_id,$fila_inicial,$columna_inicial,$tipo,$colegio){
        $em=  $this->getEntityManager();
        $formula_periodo_academico="";
        $componentes=$em->getRepository("NetpublicCoreBundle:Grupo")->getNotaAlumnoPeriodos($alumno->getId(),$profesor_id,$periodo, $asignatura_id);
        $this->pintarExcell($columna_inicial, $fila_inicial,$fila_inicial);
        $columna_inicial++;
        $this->pintarExcell($columna_inicial, $fila_inicial,"$alumno");           
        $columna_inicial++;
        $this->pintarExcell($columna_inicial, $fila_inicial,"{$alumno->getSede()}");           
        
        $columna_inicial++;
        $promedio=0;
        $nro_periodos=0;
        $ponderado_total=0;
        foreach ($componentes as $componente) {            
            $dim_comp=$componente->getDimension();
            if($dim_comp){
                $promedio=$promedio+$componente->getNota();
                $formula_periodo_academico=$formula_periodo_academico.Util::getColumnaLetra($columna_inicial).$fila_inicial.'+';
                $nro_periodos++;
                $this->pintarExcell($columna_inicial, $fila_inicial,$componente->getNota());
                $columna_inicial++;
            }
        }
        if($nro_periodos>0){
            $promedio=$promedio/$nro_periodos;
        }
        $this->pintarExcell($columna_inicial, $fila_inicial,'=('.$formula_periodo_academico.'0)/'.$nro_periodos);
        
        $valor_minimo_deficiente=$colegio->getValorMinimoDeficiente();
        $valor_maximo_deficiente=$colegio->getValorMaximoDeficiente();
        $valor_minimo_insuficiente=$colegio->getValorMinimoInsuficiente();
        $valor_maximo_insuficiente=$colegio->getValorMaximoInsuficiente();
        $valor_minimo_aceptable=$colegio->getValorMinimoAceptable();
        $valor_maximo_aceptable=$colegio->getValorMaximoAceptable();
        $valor_minimo_sobresaliente=$colegio->getValorMinimoSobresaliente();
        $valor_maximo_sobresaliente=$colegio->getValorMaximoSobresaliente();
        $indexDesempeno=-1;
        if($promedio>=$valor_minimo_deficiente && $promedio<$valor_maximo_deficiente){
            $indexDesempeno="BAJO";
            for ($index = 0; $index <= $columna_inicial+1; $index++) {
                $this->setBackgroundColor("f44800",Util::getColumnaLetra($index).($fila_inicial));
            }
        }
        if($promedio>=$valor_minimo_insuficiente && $promedio<$valor_maximo_insuficiente){
            $indexDesempeno="BÁSICO";
        }
        if($promedio>=$valor_minimo_aceptable && $promedio<$valor_maximo_aceptable){
            $indexDesempeno="ALTO";
        }
        if($promedio>=$valor_minimo_sobresaliente && $promedio<=$valor_maximo_sobresaliente){
            $indexDesempeno="SUPERIOR";
            for ($index = 0; $index <= $columna_inicial+1; $index++) {
                $this->setBackgroundColor("98fc66",Util::getColumnaLetra($index).($fila_inicial));
            }
        } 
        if($indexDesempeno==-1){
            $indexDesempeno="No determinado";
        }
        $columna_inicial++;
        $this->pintarExcell($columna_inicial, $fila_inicial,$indexDesempeno);
        
        
    }
    public function pintarFilaAcumuladoPeriodosAlumnoExcell($alumno,$periodo,$profesor_id,$areas,$fila_inicial,$columna_inicial,$tipo,$colegio){
        $em=  $this->getEntityManager();
        $this->pintarExcell($columna_inicial, $fila_inicial,$fila_inicial);
        $columna_inicial++;
        $this->pintarExcell($columna_inicial, $fila_inicial,"$alumno");           
        $columna_inicial++;
        $this->pintarExcell($columna_inicial, $fila_inicial,"{$alumno->getSede()}");           
        $columna_inicial++;
        
        foreach ($areas as $area) {
            $acumulado=$em->getRepository("NetpublicCoreBundle:Grupo")->getAcumuladoAlumnoPeriodos($alumno->getId(),
                    $profesor_id,$periodo, $area->getId());
            $this->pintarExcell($columna_inicial, $fila_inicial,$acumulado);
            $columna_inicial++;
        }
        if($alumno->getSituacionAcademicaAnoAnterior()==2){
            $re="PIERDE";
            for ($index = 0; $index <= $columna_inicial+1; $index++) {
                $this->setBackgroundColor("f44800",Util::getColumnaLetra($index).($fila_inicial));
            }
        }
        if($alumno->getEsHabilitacion()){
            for ($index = 0; $index <= $columna_inicial+1; $index++) {
                $this->setBackgroundColor("fdca01",Util::getColumnaLetra($index).($fila_inicial));
            }
            $re="RECUPERA";
        }
        if($alumno->getSituacionAcademicaAnoAnterior()==1){
            $re="--";
        }
            
        $this->pintarExcell($columna_inicial, $fila_inicial,$re);
            
        /*$valor_minimo_deficiente=$colegio->getValorMinimoDeficiente();
        $valor_maximo_deficiente=$colegio->getValorMaximoDeficiente();
        $valor_minimo_insuficiente=$colegio->getValorMinimoInsuficiente();
        $valor_maximo_insuficiente=$colegio->getValorMaximoInsuficiente();
        $valor_minimo_aceptable=$colegio->getValorMinimoAceptable();
        $valor_maximo_aceptable=$colegio->getValorMaximoAceptable();
        $valor_minimo_sobresaliente=$colegio->getValorMinimoSobresaliente();
        $valor_maximo_sobresaliente=$colegio->getValorMaximoSobresaliente();
        if($promedio>=$valor_minimo_deficiente && $promedio<$valor_maximo_deficiente){
            $indexDesempeno="BAJO";
            for ($index = 0; $index <= $columna_inicial+1; $index++) {
                $this->setBackgroundColor("f44800",Util::getColumnaLetra($index).($fila_inicial));
            }
        }
        if($promedio>=$valor_minimo_insuficiente && $promedio<$valor_maximo_insuficiente){
            $indexDesempeno="BÁSICO";
        }
        if($promedio>=$valor_minimo_aceptable && $promedio<$valor_maximo_aceptable){
            $indexDesempeno="ALTO";
        }
        if($promedio>=$valor_minimo_sobresaliente && $promedio<=$valor_maximo_sobresaliente){
            $indexDesempeno="SUPERIOR";
            for ($index = 0; $index <= $columna_inicial+1; $index++) {
                $this->setBackgroundColor("98fc66",Util::getColumnaLetra($index).($fila_inicial));
            }
        } 
        $columna_inicial++;
        $this->pintarExcell($columna_inicial, $fila_inicial,$indexDesempeno);
        */
        
    }

    public function setNombrePlanilla($nombre){
        $this->libro->getActiveSheet()->setTitle(substr("$nombre",0,28));
      
    }
    private function pintarExcell($columna,$fila,$valor,$tipo=1){
        if($tipo==1)
            $this->libro->getActiveSheet()->setCellValueByColumnAndRow($columna,$fila,$valor);
        if($tipo==0)
            $this->libro->getActiveSheet()->setCellValueByColumnAndRow($columna,$fila,"  ");
       
    }
    public function setBackgroundColor($color,$columna){
        $this->libro->getActiveSheet()
                        ->getStyle("$columna")->applyFromArray(
                              array(
                                'fill' => array(
                                 'type' => "solid",
                                 'color' => array('rgb' => "$color")
            )
            )
            );
     
     
}
   public function setColor($libro,$color,$columna){
        $font=array(
        'font'    => array(
        'name'      => 'Arial',
        'size'        => 14,
        'bold'      => true,
        'italic'    => false,
        'underline' => false,
        'strike'    => false,
        'color'     => array(
            'rgb' => $color
        )
    ));
    $this->libro->getActiveSheet()->getStyle($columna)->applyFromArray($font);    
    
    
}
    
    
}