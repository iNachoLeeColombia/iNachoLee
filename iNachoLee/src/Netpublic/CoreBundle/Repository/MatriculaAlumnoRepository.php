<?php

namespace Netpublic\CoreBundle\Repository;

use Doctrine\ORM\EntityRepository;

/**
 * MatriculaAlumnoRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class MatriculaAlumnoRepository extends EntityRepository
{
    public function setUltimAnoMatricula($ano_escolar,$alumno) {
        $em=  $this->getEntityManager();
        //actualizamos todas las matriculas en 0 para el alumno
        $dql="UPDATE NetpublicCoreBundle:MatriculaAlumno ma ";
        $dql.="SET ma.es_ultima_matricula=0";
        $dql.=" WHERE ma.alumno=:alumno_id";
        $em->createQuery($dql)
           ->setParameter("alumno_id",$alumno)
           ->execute();
        $dql="UPDATE NetpublicCoreBundle:MatriculaAlumno ma ";
        $dql.="SET ma.es_ultima_matricula=1";
        $dql.=" WHERE ma.alumno=:alumno_id";
        $dql.=" AND ma.ano=:ano_id";
        $em->createQuery($dql)
           ->setParameter("alumno_id",$alumno)
           ->setParameter("ano_id", $ano_escolar)     
           ->execute();
        
    }
    public function findMatricula($ano_escolar_id,$alumno_id) {
        $r=  $this->getEntityManager()->getRepository("NetpublicCoreBundle:MatriculaAlumno")
                ->findOneBy(array(
                    'alumno'=>$alumno_id,
                    'ano'=>$ano_escolar_id
                ));
        return $r;
   }
    public function findAlumnos($ano_escolar_id,$grupo_id) {
       $em=  $this->getEntityManager();
       $alumnos=array();
       $query="SELECT ma,a FROM NetpublicCoreBundle:MatriculaAlumno ma JOIN ma.alumno a ";
       $query.="WHERE ( ma.ano=:ano_escolar_id";
       $query.=" AND ma.grupo=:grupo_id )";
       $query.="ORDER BY a.apellido ASC";
       $query = $em->createQuery($query)
                            ->setParameters(array(
                           "ano_escolar_id"=>$ano_escolar_id,                           
                           "grupo_id"=>$grupo_id    
                            ));
       $entities = $query->getResult();
       foreach ($entities as $m_a) {
            $alumnos[]=$m_a->getAlumno();
       }  
       return $alumnos;
       
   }
    public function findAlumnosGrupo($ano_escolar_id,$grupo_id) {
       $em=  $this->getEntityManager();
       $alumnos=array();
       $query="SELECT ma,a FROM NetpublicCoreBundle:MatriculaAlumno ma JOIN ma.alumno a  ";
       $query.="WHERE ( ma.ano=:ano_escolar_id ";
       if($grupo_id==0){
        $query.=" AND ma.grupo is null ";
       }
       else {
        $query.=" AND ma.grupo=:grupo_id ";
       }
       $query.=") ";
       
       $query.="ORDER BY a.apellido ASC";
       $query = $em->createQuery($query)
                            ->setParameters(array(
                           "ano_escolar_id"=>$ano_escolar_id));
       if($grupo_id!=0){
            $query->setParameter('grupo_id', $grupo_id);
       }
       $entities = $query->getResult();
       foreach ($entities as $m_a) {
            $alumnos[]=$m_a->getAlumno();
       }  
       return $alumnos;
       
   }

     public function findAlumnosGrado($ano_escolar_id,$grado_id) {
       $em=  $this->getEntityManager();
       $alumnos=array();
       $query="SELECT ma,a FROM NetpublicCoreBundle:MatriculaAlumno ma JOIN ma.alumno a JOIN ma.grupo g ";
       $query.="WHERE ( ma.ano=:ano_escolar_id";
       $query.=" AND g.grado=:grado_id )";
       $query.="ORDER BY a.apellido ASC";
       $query = $em->createQuery($query)
                            ->setParameters(array(
                           "ano_escolar_id"=>$ano_escolar_id,                           
                           "grado_id"=>$grado_id    
                            ));
       $entities = $query->getResult();
       foreach ($entities as $m_a) {
            $alumnos[]=$m_a->getAlumno();
       }  
       return $alumnos;
       
   }
  
}