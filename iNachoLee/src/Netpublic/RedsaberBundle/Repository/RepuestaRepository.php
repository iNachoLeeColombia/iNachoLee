<?php

namespace Netpublic\RedsaberBundle\Repository;

use Doctrine\ORM\EntityRepository;

/**
 * RepuestaRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class RepuestaRepository extends EntityRepository
{
     public function getPromedioUnEstudianteComponente($examen_id,$ids_preguntas_componente,$referencia,$nota_maxima=10
               ) {
               $em=  $this->getEntityManager();
               $valor_nota=0;
               $total_porcentajes=0;
               $rp=0;
               foreach ($ids_preguntas_componente as $id) {
                    $p_e=$em->getRepository("NetpublicRedsaberBundle:PreguntaExamen")->find($id['id']);
                    $respuesta=  $this->respuestaAlumnoPregunta($p_e->getPosicion()+1,$examen_id,$p_e->getPregunta()->getLabel(),$referencia);
                    $porcentanje=$em->getRepository("NetpublicRedsaberBundle:Respueta")
                                             ->getPorcentajePregunta($p_e->getPosicion(),$examen_id,$p_e->getPregunta()->getLabel());
                    $rp=$rp+$respuesta*$porcentanje;
                    $total_porcentajes+=$porcentanje;
               }
               if($total_porcentajes>0)
                    $valor_nota=($rp*$nota_maxima)/$total_porcentajes;
               
               return $valor_nota;
     }

           public function getPromedioEstudianteComponente($examen_id,$ids_preguntas_componente,$nota_maxima=10) {
               $em=  $this->getEntityManager();
               $valor_nota=0;               
               $numero_alumnos=0;
               $alumno_examen=$em->getRepository("NetpublicRedsaberBundle:AlumnoExamen")->findBy(array(
                    'examen'=>$examen_id
                ));        
               foreach ($alumno_examen as $a_e) {
                   //echo "<br/>--------------------------------Alumno: ".$a_e->getAlumno().$a_e->getReferencia()."-----------------------------------------------------</br>";
                   $total_porcentajes=0;
                    $rp=0;
                    foreach ($ids_preguntas_componente as $id) {
                        //echo print_r($id->id);
                        $p_e=$em->getRepository("NetpublicRedsaberBundle:PreguntaExamen")->find($id->id);
                        //echo "<br/>---------------pregunta nuro: ".$p_e->getPosicion()."---------------------------</br>";
                        $respuesta=$em->getRepository("NetpublicRedsaberBundle:Respueta")
                                             ->respuestaAlumnoPregunta($p_e->getPosicion()+1,$examen_id,$p_e->getPregunta()->getLabel(),$a_e->getReferencia());
                    //                     echo $p_e->getPregunta()->getContenido()->getCuerpo()."<br/>";
                    //                     echo "Respuestas correcta:".$p_e->getPregunta()->getLabel()."<br/>";
                    //                     echo "Indice:".$p_e->getPosicion()."<br/>";
                    //                     echo "Repuesta en el componete".$respuesta."<br/>";
                                         //foreach ($p_e->getPregunta()->getComponente() as $c) {
                                         //    echo $c->getNombre()."<br/>";
                                         // }
                        $porcentanje=$em->getRepository("NetpublicRedsaberBundle:Respueta")
                                             ->getPorcentajePregunta($p_e->getPosicion(),$examen_id,$p_e->getPregunta()->getLabel());
                        $rp=$rp+$respuesta*$porcentanje;
                        $total_porcentajes+=$porcentanje;
                        //echo "Porcentaje $porcentanje ,RepuestaDel Estudiante: $respuesta <br/>";
                    /*
                                         echo $p_e->getPregunta()->getContenido()->getCuerpo()."<br/>";
                                          foreach ($p_e->getPregunta()->getComponente() as $c) {
                                             echo $c->getNombre()."<br/>";
                                         }*/ 
                    }
                    if($total_porcentajes>0)
                    $valor_nota=$valor_nota+(($rp*$nota_maxima)/$total_porcentajes);
                    $numero_alumnos++;
                    
               }
               if($numero_alumnos>0)
                    $resultado=  number_format ($valor_nota/$numero_alumnos,1);
               else
                   $resultado=0;
               return $resultado;
           }
           public function respuestaAlumnoPregunta($indice,$examen_id,$label_correcto,$alumno_referecia){
            $em=  $this->getEntityManager();
            $re=0;
            $query="SELECT r,e FROM NetpublicRedsaberBundle:Respueta r JOIN r.examen e  ";
            $query.=" WHERE (";
            $query.=" r.indice=:indice";       
            $query.=" AND e.id=:examen_id ";
            $query.=" AND r.tipo=1 ";            
            $query.=" AND r.alumno_referencia=:alumno_referencia ";
            $query.=" )"; 
            $entities=$em->createQuery($query)                
                                 ->setParameters(array(
                                       "indice"=>$indice,
                                       "examen_id"=>$examen_id,
                                       "alumno_referencia"=>$alumno_referecia
                                       ))->getOneOrNullResult(); 
            foreach ($entities->getBuble() as $b) {
                 //echo "<br/>Repuesta en Hoja de repuesta-estudiante:"."estado".$b->getEstado().",".$b->getLabel()."fin<br/>";
                 if($label_correcto==$b->getLabel())
                    if($b->getEstado()==1){
                         $re=1;
                         return $re;
                    }
                    
            }
            return $re;  
    }

    public function getPorcentajePregunta($indice,$examen_id,$label_correcto){
            $em=  $this->getEntityManager();
            $re=0;
            $query="SELECT r,e FROM NetpublicRedsaberBundle:Respueta r JOIN r.examen e  ";
            $query.=" WHERE (";
            $query.=" r.indice=:indice";       
            $query.=" AND e.id=:examen_id ";
            $query.=" AND r.tipo=2 ";            
            $query.=" )"; 
            $entities=$em->createQuery($query)                
                                 ->setParameters(array(
                                       "indice"=>$indice,
                                       "examen_id"=>$examen_id,
                                       ))->getOneOrNullResult(); 
            foreach ($entities->getBuble() as $b) {
                 //echo "<br/>Porcentaje en Hoja de repuesta-estudiante:"."estado".$b->getEstado().",".$b->getLabel()."fin<br/>";
                 if($label_correcto==$b->getLabel())
                    if($b->getEstado()==1){
                         $re=$b->getEstado();
                         return $re;
                    }
                    
            }
            return $re;  
    }
     
   
}
